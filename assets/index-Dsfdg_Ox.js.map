{"version":3,"file":"index-Dsfdg_Ox.js","sources":["../../src/interpreter/lexer.ts","../../src/interpreter/parser.ts","../../src/renderer/ArrowTopLeftBottomRight.tsx","../../src/renderer/ArrowBottomLeftTopRight.tsx","../../src/renderer/StructogramNode.tsx","../../src/renderer/renderer.tsx","../../src/components/StructogramCodeEditor/StructogramCodeEditor.tsx","../../src/components/AdaptiveButton.tsx","../../src/routes/EditorPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["export enum TokenKind {\r\n\tEND = 0,\r\n\tSYMBOL,\r\n\tKEYWORD,\r\n\r\n\tLEFT_PAREN,\r\n\tRIGHT_PAREN,\r\n\tLEFT_CURLY,\r\n\tRIGHT_CURLY,\r\n\tSEMICOLON,\r\n\tWHITE_SPACE,\r\n}\r\n\r\nexport type Token = {\r\n\tkind: TokenKind;\r\n\ttext: string;\r\n};\r\n\r\nconst KEYWORDS: string[] = [\r\n\t\"for\",\r\n\t\"if\",\r\n\t\"else\",\r\n\t\"while\",\r\n\t\"do\",\r\n\t\"func\",\r\n\t\"proc\",\r\n];\r\n\r\nconst LITERAL_TOKENS: Record<string, TokenKind> =\r\n\t{\r\n\t\t\"{\": TokenKind.LEFT_CURLY,\r\n\t\t\"}\": TokenKind.RIGHT_CURLY,\r\n\t\t\"(\": TokenKind.LEFT_PAREN,\r\n\t\t\")\": TokenKind.RIGHT_PAREN,\r\n\t\t\";\": TokenKind.SEMICOLON,\r\n\t};\r\n\r\nexport type Lexer = {\r\n\tcontent: string;\r\n\tcontentLength: number;\r\n\tcursorPos: number;\r\n};\r\n\r\nexport const lexerInit = (\r\n\tcontent: string,\r\n): Lexer => {\r\n\treturn {\r\n\t\tcontent: content.normalize(),\r\n\t\tcontentLength: content.normalize().length,\r\n\t\tcursorPos: 0,\r\n\t};\r\n};\r\n\r\nexport const lexerGetNextTokenThenAdvance = (\r\n\tl: Lexer,\r\n): Token => {\r\n\tconst token = {\r\n\t\tkind: TokenKind.END,\r\n\t\ttext: \"\",\r\n\t};\r\n\r\n\tif (l.cursorPos >= l.contentLength) {\r\n\t\treturn token;\r\n\t}\r\n\r\n\tif (/\\s/.test(l.content[l.cursorPos])) {\r\n\t\ttoken[\"kind\"] = TokenKind.WHITE_SPACE;\r\n\t\ttoken[\"text\"] = l.content[l.cursorPos];\r\n\t\tl.cursorPos++;\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken[\"text\"] = l.content[l.cursorPos];\r\n\tl.cursorPos++;\r\n\r\n\tif (token[\"text\"] in LITERAL_TOKENS) {\r\n\t\ttoken[\"kind\"] = LITERAL_TOKENS[token[\"text\"]];\r\n\t\treturn token;\r\n\t}\r\n\r\n\twhile (\r\n\t\tl.cursorPos < l.contentLength &&\r\n\t\t!(l.content[l.cursorPos] in LITERAL_TOKENS) &&\r\n\t\t!/\\s/.test(l.content[l.cursorPos])\r\n\t) {\r\n\t\ttoken[\"text\"] += l.content[l.cursorPos];\r\n\t\tl.cursorPos++;\r\n\t}\r\n\r\n\tif (KEYWORDS.includes(token[\"text\"])) {\r\n\t\ttoken[\"kind\"] = TokenKind.KEYWORD;\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken[\"kind\"] = TokenKind.SYMBOL;\r\n\treturn token;\r\n};\r\n\r\nexport const lexerGetAllTokens = (\r\n\tl: Lexer,\r\n): Token[] => {\r\n\tconst tokens: Token[] = [];\r\n\tlet token: Token;\r\n\twhile (\r\n\t\t(token = lexerGetNextTokenThenAdvance(l))\r\n\t\t\t.kind !== TokenKind.END\r\n\t) {\r\n\t\ttokens.push(token);\r\n\t}\r\n\treturn tokens;\r\n};\r\n","import { Token, TokenKind } from \"./lexer\";\r\n\r\nexport enum NodeKind {\r\n\tEND = 0,\r\n\tPROCESS,\r\n\tLOOP_FIRST,\r\n\tLOOP_LAST,\r\n\tIF_ELSE,\r\n\tFUNC,\r\n}\r\n\r\ntype NodeEnd = {\r\n\tkind: NodeKind.END;\r\n};\r\n\r\ntype NodeProcess = {\r\n\tkind: NodeKind.PROCESS;\r\n\tbody: Token[];\r\n};\r\n\r\ntype NodeLoopFirst = {\r\n\tkind: NodeKind.LOOP_FIRST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeLoopLast = {\r\n\tkind: NodeKind.LOOP_LAST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeIfElse = {\r\n\tkind: NodeKind.IF_ELSE;\r\n\tcondition: Token[];\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n};\r\n\r\ntype NodeFunc = {\r\n\tkind: NodeKind.FUNC;\r\n\tname: Token[];\r\n\targs: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\nexport type Node =\r\n\t| NodeEnd\r\n\t| NodeProcess\r\n\t| NodeLoopFirst\r\n\t| NodeLoopLast\r\n\t| NodeIfElse\r\n\t| NodeFunc;\r\n\r\nexport type Parser = {\r\n\ttokens: Token[];\r\n\ttokenLength: number;\r\n\tcursorPos: number;\r\n};\r\n\r\nexport const parserInit = (\r\n\ttokens: Token[],\r\n): Parser => {\r\n\treturn {\r\n\t\ttokens: tokens,\r\n\t\ttokenLength: tokens.length,\r\n\t\tcursorPos: 0,\r\n\t};\r\n};\r\n\r\nconst parserCollectTokens = (\r\n\tp: Parser,\r\n\tstartToken: TokenKind,\r\n\tstopToken: TokenKind,\r\n): Token[] => {\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn [];\r\n\t}\r\n\tif (p.tokens[p.cursorPos].kind !== startToken) {\r\n\t\treturn [];\r\n\t}\r\n\tp.cursorPos++;\r\n\tconst tokens: Token[] = [];\r\n\tlet depth = -1;\r\n\tlet token: Token;\r\n\twhile (p.cursorPos < p.tokenLength) {\r\n\t\ttoken = p.tokens[p.cursorPos];\r\n\t\tp.cursorPos++;\r\n\t\tif (token.kind === startToken) {\r\n\t\t\tdepth--;\r\n\t\t}\r\n\t\tif (token.kind === stopToken) {\r\n\t\t\tdepth++;\r\n\t\t}\r\n\t\tif (depth === 0) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\ttokens.push(token);\r\n\t}\r\n\treturn tokens;\r\n};\r\n\r\nconst parserSkipWhiteSpace = (\r\n\tp: Parser,\r\n): void => {\r\n\twhile (\r\n\t\tp.cursorPos < p.tokenLength &&\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\t\tTokenKind.WHITE_SPACE\r\n\t) {\r\n\t\tp.cursorPos++;\r\n\t}\r\n};\r\n\r\nconst parserBuildLoopFirstNode = (\r\n\tp: Parser,\r\n): NodeLoopFirst => {\r\n\tconst node: NodeLoopFirst = {\r\n\t\tkind: NodeKind.LOOP_FIRST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildLoopLastNode = (\r\n\tp: Parser,\r\n): NodeLoopLast => {\r\n\tconst node: NodeLoopLast = {\r\n\t\tkind: NodeKind.LOOP_LAST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"while\"\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tp.cursorPos++; // consume the \"while\" keyword\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\tTokenKind.SEMICOLON\r\n\t) {\r\n\t\tp.cursorPos++; // consume the semicolon\r\n\t}\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildIfElseNode = (\r\n\tp: Parser,\r\n): NodeIfElse => {\r\n\tconst node: NodeIfElse = {\r\n\t\tkind: NodeKind.IF_ELSE,\r\n\t\tcondition: [],\r\n\t\tbodyIf: [],\r\n\t\tbodyElse: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.bodyIf = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"else\"\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tp.cursorPos++; // consume the \"else\" keyword\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.bodyElse = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildFuncNode = (\r\n\tp: Parser,\r\n): NodeFunc => {\r\n\tconst node: NodeFunc = {\r\n\t\tkind: NodeKind.FUNC,\r\n\t\tname: [],\r\n\t\targs: [],\r\n\t\tbody: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.name.push(p.tokens[p.cursorPos]);\r\n\tp.cursorPos++; // consume the function name\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.args = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserGetNextNodeThenAdvance = (\r\n\tp: Parser,\r\n): Node => {\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.END,\r\n\t\t};\r\n\t}\r\n\r\n\tlet token = p.tokens[p.cursorPos];\r\n\tp.cursorPos++;\r\n\tif (token.kind === TokenKind.KEYWORD) {\r\n\t\tswitch (token.text) {\r\n\t\t\tcase \"func\":\r\n\t\t\tcase \"proc\":\r\n\t\t\t\treturn parserBuildFuncNode(p);\r\n\t\t\tcase \"for\":\r\n\t\t\tcase \"while\":\r\n\t\t\t\treturn parserBuildLoopFirstNode(p);\r\n\t\t\tcase \"do\":\r\n\t\t\t\treturn parserBuildLoopLastNode(p);\r\n\t\t\tcase \"if\":\r\n\t\t\t\treturn parserBuildIfElseNode(p);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconst node: NodeProcess = {\r\n\t\tkind: NodeKind.PROCESS,\r\n\t\tbody: [],\r\n\t};\r\n\r\n\tif (token.kind === TokenKind.SEMICOLON) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.body.push(token);\r\n\r\n\twhile (p.cursorPos < p.tokenLength) {\r\n\t\ttoken = p.tokens[p.cursorPos];\r\n\t\tp.cursorPos++;\r\n\t\tif (\r\n\t\t\ttoken.kind === TokenKind.END ||\r\n\t\t\ttoken.kind === TokenKind.SEMICOLON\r\n\t\t) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tnode.body.push(token);\r\n\t}\r\n\r\n\treturn node;\r\n};\r\n\r\nexport const parserGetAllNodes = (\r\n\tp: Parser,\r\n): Node[] => {\r\n\tconst nodes: Node[] = [];\r\n\tlet node: Node;\r\n\twhile (\r\n\t\t(node = parserGetNextNodeThenAdvance(p))\r\n\t\t\t.kind !== NodeKind.END\r\n\t) {\r\n\t\tnodes.push(node);\r\n\t}\r\n\r\n\treturn nodes;\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowTopLeftBottomRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"5\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowBottomLeftTopRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"5\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"0\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC, Fragment, ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tTypographyProps,\r\n\tTypography,\r\n\tStack,\r\n} from \"@mui/material\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nimport { ArrowTopLeftBottomRight } from \"./ArrowTopLeftBottomRight\";\r\nimport { ArrowBottomLeftTopRight } from \"./ArrowBottomLeftTopRight\";\r\nimport { Node, NodeKind } from \"interpreter\";\r\n\r\ntype StructogramNodeWrapperProps = {\r\n\tchildren: ReactNode | ReactNode[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeWrapper: FC<\r\n\tStructogramNodeWrapperProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tchildren,\r\n\t\tborderTop,\r\n\t\tborderBottom,\r\n\t\tborderLeft,\r\n\t\tborderRight,\r\n\t} = props;\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\tborderStyle: \"solid\",\r\n\t\t\t\tborderLeftWidth: borderLeft ? 2 : 0,\r\n\t\t\t\tborderTopWidth: borderTop ? 2 : 0,\r\n\t\t\t\tborderBottomWidth: borderBottom ? 2 : 0,\r\n\t\t\t\tborderRightWidth: borderRight ? 2 : 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\ntype StructogramComponentTextProps =\r\n\tTypographyProps & {\r\n\t\tchildren?: string;\r\n\t};\r\nconst StructogramComponentText: FC<\r\n\tStructogramComponentTextProps\r\n> = (props) => {\r\n\tconst { children, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tpadding={1.5}\r\n\t\t\t{...rest}\r\n\t\t\tsx={{\r\n\t\t\t\tfontFamily: \"Fira Code\",\r\n\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\tfontVariantLigatures: \"contextual\",\r\n\t\t\t\t...rest.sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children ?? \"...\"}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeProcessProps = {\r\n\ttext?: string;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeProcess: FC<\r\n\tStructogramNodeProcessProps\r\n> = (props) => {\r\n\tconst { text, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{text}\r\n\t\t\t</StructogramComponentText>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeLoopFirstProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeLoopFirst: FC<\r\n\tStructogramNodeLoopFirstProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</StructogramComponentText>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeLoopLastProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeLoopLast: FC<\r\n\tStructogramNodeLoopLastProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderBottom\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderBottom\r\n\t\t\t\tborderLeft\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</StructogramComponentText>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeIfElseProps = {\r\n\tcondition?: string;\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeIfElse: FC<\r\n\tStructogramNodeIfElseProps\r\n> = (props) => {\r\n\tconst { condition, bodyIf, bodyElse, ...rest } =\r\n\t\tprops;\r\n\r\n\tlet bodyNodeIf: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyIf.length > 0) {\r\n\t\tbodyNodeIf = bodyIf.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\tlet bodyNodeElse: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyElse.length > 0) {\r\n\t\tbodyNodeElse = bodyElse.map(\r\n\t\t\t(subnode, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tnode={subnode}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t>\r\n\t\t\t\t\t<StructogramComponentText align=\"center\">\r\n\t\t\t\t\t\t{condition}\r\n\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StructogramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tTrue\r\n\t\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t\t\t<ArrowTopLeftBottomRight htmlColor=\"black\" />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ArrowBottomLeftTopRight />\r\n\t\t\t\t\t\t<StructogramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFalse\r\n\t\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tborderColor: \"inherit\",\r\n\t\t\t\t\t\t\tborderRightStyle: \"solid\",\r\n\t\t\t\t\t\t\tborderRightWidth: 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{bodyNodeIf}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack height=\"100%\">\r\n\t\t\t\t\t\t{bodyNodeElse}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeFuncProps = {\r\n\tdeclaration: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeFunc: FC<\r\n\tStructogramNodeFuncProps\r\n> = (props) => {\r\n\tconst { declaration, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t\tborderRight\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tborderRight\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText align=\"center\">\r\n\t\t\t\t{declaration}\r\n\t\t\t</StructogramComponentText>\r\n\t\t\t<Box paddingX={2}>{bodyNode}</Box>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\nconst fitlerEmptyProcessNodes = (\r\n\tnode: Node,\r\n): boolean => {\r\n\treturn (\r\n\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\tnode.body\r\n\t\t\t.map((token) => token.text)\r\n\t\t\t.join(\"\")\r\n\t\t\t.trim().length > 0\r\n\t);\r\n};\r\n\r\ntype StructogramNodeProps = {\r\n\tnode: Node;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNode: FC<\r\n\tStructogramNodeProps\r\n> = (props) => {\r\n\tconst { node, ...rest } = props;\r\n\r\n\tswitch (node.kind) {\r\n\t\tcase NodeKind.FUNC: {\r\n\t\t\tlet name = \"...\";\r\n\t\t\tif (node.name.length > 0) {\r\n\t\t\t\tname = node.name\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\");\r\n\t\t\t}\r\n\t\t\tconst args = node.args\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tconst declaration = `${name}(${args})`;\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeFunc\r\n\t\t\t\t\tdeclaration={declaration}\r\n\t\t\t\t\tbody={node.body}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcase NodeKind.LOOP_FIRST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeLoopFirst\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.LOOP_LAST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeLoopLast\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.IF_ELSE: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeIfElse\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbodyIf={node.bodyIf.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tbodyElse={node.bodyElse.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.PROCESS: {\r\n\t\t\tlet text: string | undefined = node.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim();\r\n\r\n\t\t\tif (text.length === 0) {\r\n\t\t\t\ttext = undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeProcess\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\ttext={text}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <Fragment />;\r\n};\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tSxProps,\r\n\tTypography,\r\n} from \"@mui/material\";\r\n\r\nimport { Node, NodeKind } from \"interpreter\";\r\nimport { StructogramNode } from \"renderer/StructogramNode\";\r\n\r\nexport const renderer = (\r\n\tnodes: Node[],\r\n\tid: string,\r\n\tboxProps: SxProps,\r\n): ReactNode => {\r\n\tlet component: ReactNode | ReactNode[] = (\r\n\t\t<Typography\r\n\t\t\tfontFamily=\"inherit\"\r\n\t\t\tfontStyle=\"italic\"\r\n\t\t>\r\n\t\t\tNothing to display.\r\n\t\t</Typography>\r\n\t);\r\n\r\n\tconst filteredNodes = nodes.filter(\r\n\t\t(node) =>\r\n\t\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\t\tnode.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim().length > 0,\r\n\t);\r\n\r\n\tif (filteredNodes.length > 0) {\r\n\t\tcomponent = filteredNodes.map(\r\n\t\t\t(node, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tnode={node}\r\n\t\t\t\t\tborderLeft\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tborderRight\r\n\t\t\t\t\tborderBottom={\r\n\t\t\t\t\t\tindex === filteredNodes.length - 1\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box sx={boxProps}>\r\n\t\t\t<Box\r\n\t\t\t\tid={id}\r\n\t\t\t\tmaxWidth=\"640px\"\r\n\t\t\t>\r\n\t\t\t\t{component}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport { Box, SxProps } from \"@mui/material\";\r\n\r\nimport ReactCodeMirror from \"@uiw/react-codemirror\";\r\n\r\nimport \"./styles.css\";\r\n\r\ntype StructogramCodeEditorProps = {\r\n\tvalue: string;\r\n\tonValueChange?: (value: string) => void;\r\n\tboxProps?: SxProps;\r\n};\r\nexport const StructogramCodeEditor: FC<\r\n\tStructogramCodeEditorProps\r\n> = (props) => {\r\n\tconst { value, onValueChange, boxProps } =\r\n\t\tprops;\r\n\r\n\treturn (\r\n\t\t<Box sx={boxProps}>\r\n\t\t\t<ReactCodeMirror\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onValueChange}\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonProps,\r\n\tTooltip,\r\n} from \"@mui/material\";\r\n\r\ntype AdaptiveButtonProps = ButtonProps & {\r\n\tcollapse: boolean;\r\n};\r\nexport const AdaptiveButton: FC<\r\n\tAdaptiveButtonProps\r\n> = (props) => {\r\n\tconst { collapse, ...rest } = props;\r\n\r\n\tif (collapse) {\r\n\t\treturn (\r\n\t\t\t<Tooltip title={rest.children}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tstartIcon={undefined}\r\n\t\t\t\t\tendIcon={undefined}\r\n\t\t\t\t>\r\n\t\t\t\t\t{rest.startIcon}\r\n\t\t\t\t\t{rest.endIcon}\r\n\t\t\t\t</Button>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...rest}\r\n\t\t\tstartIcon={rest.startIcon}\r\n\t\t\tendIcon={rest.endIcon}\r\n\t\t>\r\n\t\t\t{rest.children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n","import {\r\n\tFC,\r\n\tFragment,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tStack,\r\n\tPaper,\r\n\tButton,\r\n\tMenuList,\r\n\tListItemText,\r\n\tButtonGroup,\r\n\tPopover,\r\n\tMenuItem,\r\n\tListItemIcon,\r\n\tuseMediaQuery,\r\n\tTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n\tDownloadRounded,\r\n\tLaunchRounded,\r\n\tSendRounded,\r\n} from \"@mui/icons-material\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n\ttoJpeg,\r\n\ttoPng,\r\n\ttoSvg,\r\n} from \"html-to-image\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n\tlexerGetAllTokens,\r\n\tlexerInit,\r\n\tNode,\r\n\tparserGetAllNodes,\r\n\tparserInit,\r\n} from \"interpreter\";\r\nimport { renderer } from \"renderer/renderer\";\r\n\r\nimport { StructogramCodeEditor } from \"components/StructogramCodeEditor\";\r\nimport { AdaptiveButton } from \"components/AdaptiveButton\";\r\n\r\nexport const EditorPage: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\tconst matchBreakpointXs = useMediaQuery<Theme>(\r\n\t\t(theme) => theme.breakpoints.down(\"md\"),\r\n\t);\r\n\r\n\tconst [\r\n\t\tpopoverExportMenuAnchor,\r\n\t\tsetPopoverExportMenuAnchor,\r\n\t] = useState<HTMLButtonElement | null>(null);\r\n\r\n\tconst [previewOpen, setPreviewOpen] = useState(\r\n\t\t() => {\r\n\t\t\tconst url = new URL(window.location.href);\r\n\t\t\tconst preview =\r\n\t\t\t\turl.searchParams.get(\"preview\");\r\n\t\t\tif (preview === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn preview === \"true\";\r\n\t\t},\r\n\t);\r\n\tconst [nodes, setNodes] = useState<Node[]>([]);\r\n\tconst [editorContent, setEditorContent] =\r\n\t\tuseState(() => {\r\n\t\t\tconst url = new URL(window.location.href);\r\n\t\t\tconst content =\r\n\t\t\t\turl.searchParams.get(\"content\");\r\n\t\t\tif (content !== null) {\r\n\t\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t\t\"content\",\r\n\t\t\t\t\tcontent,\r\n\t\t\t\t);\r\n\t\t\t\treturn content;\r\n\t\t\t}\r\n\r\n\t\t\tconst savedContent =\r\n\t\t\t\twindow.localStorage.getItem(\"content\");\r\n\t\t\tif (savedContent !== null) {\r\n\t\t\t\treturn savedContent;\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tokens = lexerGetAllTokens(\r\n\t\t\tlexerInit(editorContent),\r\n\t\t);\r\n\t\tconst nodes = parserGetAllNodes(\r\n\t\t\tparserInit(tokens),\r\n\t\t);\r\n\t\tsetNodes(nodes);\r\n\t}, [editorContent]);\r\n\r\n\tconst onContentChange = useCallback(\r\n\t\t(v: string) => {\r\n\t\t\tsetEditorContent(v);\r\n\t\t\twindow.localStorage.setItem(\"content\", v);\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\tconst handleSaveSVG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoSvg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as SVG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handleSavePNG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoPng(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as PNG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handleSaveJPEG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoJpeg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as JPEG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handlePreviewToggle = useCallback(() => {\r\n\t\tsetPreviewOpen((prev) => !prev);\r\n\t}, []);\r\n\r\n\tconst handleCopyLink = useCallback(() => {\r\n\t\tconst url = new URL(window.location.href);\r\n\t\turl.searchParams.set(\"preview\", \"true\");\r\n\t\turl.searchParams.set(\r\n\t\t\t\"content\",\r\n\t\t\teditorContent,\r\n\t\t);\r\n\t\tnavigator.clipboard.writeText(url.href);\r\n\t\tenqueueSnackbar(\"Copied link to clipboard\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [editorContent, enqueueSnackbar]);\r\n\r\n\tconst handlePopoverExportMenuOpen = useCallback(\r\n\t\t(\r\n\t\t\tevent: React.MouseEvent<HTMLButtonElement>,\r\n\t\t) => {\r\n\t\t\tsetPopoverExportMenuAnchor(\r\n\t\t\t\tevent.currentTarget,\r\n\t\t\t);\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\tconst handlePopoverExportMenuClose =\r\n\t\tuseCallback(() => {\r\n\t\t\tsetPopoverExportMenuAnchor(null);\r\n\t\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Box\r\n\t\t\t\tsx={{\r\n\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\toverflowY: \"hidden\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handlePreviewToggle}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"Show code\"\r\n\t\t\t\t\t\t\t\t\t: \"Hide code\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\thref=\"https://eurydia.github.io/project-nassi-shneiderman-diagram-builder-online-docs/\"\r\n\t\t\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\tendIcon={<LaunchRounded />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tdocs\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tstartIcon={<DownloadRounded />}\r\n\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\thandlePopoverExportMenuOpen\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEXPORT\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tendIcon={<SendRounded />}\r\n\t\t\t\t\t\t\t\tonClick={handleCopyLink}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSHARE\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tpreviewOpen ? \"none\" : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StructogramCodeEditor\r\n\t\t\t\t\t\t\t\tvalue={editorContent}\r\n\t\t\t\t\t\t\t\tonValueChange={onContentChange}\r\n\t\t\t\t\t\t\t\tboxProps={{\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs\r\n\t\t\t\t\t\t\tlg\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tmatchBreakpointXs && !previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderer(\r\n\t\t\t\t\t\t\t\tnodes,\r\n\t\t\t\t\t\t\t\t\"structogram-preview-region\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpadding: 4,\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t\t\tborderColor: grey[700],\r\n\t\t\t\t\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\t\t\t\t\tuserSelect: \"none\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Popover\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={popoverExportMenuAnchor}\r\n\t\t\t\topen={popoverExportMenuAnchor !== null}\r\n\t\t\t\tonClose={handlePopoverExportMenuClose}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuList>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSaveJPEG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as JPEG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSavePNG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as PNG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSaveSVG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as SVG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</MenuList>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Popover>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { Fragment, FC } from \"react\";\r\nimport {\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nimport { EditorPage } from \"routes/EditorPage\";\r\n\r\nconst themeDark = createTheme({\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t},\r\n});\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<ThemeProvider theme={themeDark}>\r\n\t\t\t\t<SnackbarProvider\r\n\t\t\t\t\tpreventDuplicate\r\n\t\t\t\t\tautoHideDuration={2000}\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EditorPage />\r\n\t\t\t\t</SnackbarProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport { App } from \"./App.tsx\";\r\n\r\nReactDOM.createRoot(\r\n\tdocument.getElementById(\"root\")!,\r\n).render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n);\r\n"],"names":["TokenKind","TokenKind2","KEYWORDS","LITERAL_TOKENS","lexerGetNextTokenThenAdvance","l","token","kind","text","cursorPos","contentLength","test","content","includes","NodeKind","NodeKind2","parserInit","tokens","tokenLength","length","parserCollectTokens","p","startToken","stopToken","depth","push","parserSkipWhiteSpace","WHITE_SPACE","parserGetNextNodeThenAdvance","KEYWORD","node","name","args","body","LEFT_PAREN","RIGHT_PAREN","LEFT_CURLY","parserGetAllNodes","RIGHT_CURLY","parserBuildFuncNode","condition","parserBuildLoopFirstNode","SEMICOLON","parserBuildLoopLastNode","bodyIf","bodyElse","parserBuildIfElseNode","END","nodes","ArrowTopLeftBottomRight","props","sx","jsxRuntimeExports","jsx","SvgIcon","position","width","height","children","xmlns","preserveAspectRatio","fill","viewBox","strokeWidth","x1","y1","x2","y2","stroke","strokeLinecap","ArrowBottomLeftTopRight","StructogramNodeWrapper","borderTop","borderBottom","borderLeft","borderRight","Box","borderStyle","borderLeftWidth","borderTopWidth","borderBottomWidth","borderRightWidth","StructogramComponentText","rest","Typography","padding","fontFamily","wordBreak","fontVariantLigatures","StructogramNodeProcess","StructogramNodeLoopFirst","bodyNode","map","subnode","index","StructogramNode","jsxs","paddingLeft","StructogramNodeLoopLast","StructogramNodeIfElse","bodyNodeIf","bodyNodeElse","Grid","container","item","xs","align","display","alignItems","justifyContent","zIndex","backgroundColor","grey","htmlColor","Stack","borderColor","borderRightStyle","StructogramNodeFunc","declaration","paddingX","fitlerEmptyProcessNodes","PROCESS","join","trim","FUNC","LOOP_FIRST","filter","LOOP_LAST","IF_ELSE","Fragment","renderer","id","boxProps","component","fontStyle","filteredNodes","maxWidth","StructogramCodeEditor","value","onValueChange","ReactCodeMirror","onChange","theme","AdaptiveButton","collapse","Tooltip","title","Button","startIcon","endIcon","EditorPage","enqueueSnackbar","useSnackbar","matchBreakpointXs","useMediaQuery","breakpoints","down","popoverExportMenuAnchor","setPopoverExportMenuAnchor","useState","previewOpen","setPreviewOpen","preview","URL","window","location","href","searchParams","get","setNodes","editorContent","setEditorContent","localStorage","setItem","savedContent","getItem","useEffect","lexerGetAllTokens","normalize","onContentChange","useCallback","v","handleSaveSVG","async","HTMLNode","document","getElementById","toSvg","then","blob","saveAs","variant","handleSavePNG","toPng","handleSaveJPEG","toJpeg","handlePreviewToggle","prev","handleCopyLink","url","set","navigator","clipboard","writeText","handlePopoverExportMenuOpen","event","currentTarget","handlePopoverExportMenuClose","overflowY","Paper","square","elevation","direction","ButtonGroup","onClick","target","LaunchRounded","DownloadRounded","SendRounded","lg","userSelect","Popover","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","open","onClose","MenuList","MenuItem","ListItemIcon","fontSize","ListItemText","themeDark","createTheme","palette","mode","App","CssBaseline","ThemeProvider","SnackbarProvider","preventDuplicate","autoHideDuration","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"okCAAY,IAAAA,GAAAA,IACXA,EAAAA,MAAM,GAAN,MACAA,EAAAC,EAAA,OAAA,GAAA,SACAD,EAAAC,EAAA,QAAA,GAAA,UAEAD,EAAAC,EAAA,WAAA,GAAA,aACAD,EAAAC,EAAA,YAAA,GAAA,cACAD,EAAAC,EAAA,WAAA,GAAA,aACAD,EAAAC,EAAA,YAAA,GAAA,cACAD,EAAAC,EAAA,UAAA,GAAA,YACAD,EAAAC,EAAA,YAAA,GAAA,cAVWD,IAAAA,GAAA,CAAA,GAkBZ,MAAME,EAAqB,CAC1B,MACA,KACA,OACA,QACA,KACA,OACA,QAGKC,EACL,CACC,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,GAmBMC,EACZC,IAEA,MAAMC,EAAQ,CACbC,KAAM,EACNC,KAAM,IAGH,GAAAH,EAAEI,WAAaJ,EAAEK,cACb,OAAAJ,EAGR,GAAI,KAAKK,KAAKN,EAAEO,QAAQP,EAAEI,YAIlB,OAHPH,EAAY,KAAI,EAChBA,EAAY,KAAID,EAAEO,QAAQP,EAAEI,WAC1BJ,EAAAI,YACKH,EAMJ,GAHJA,EAAY,KAAID,EAAEO,QAAQP,EAAEI,WAC1BJ,EAAAI,YAEEH,EAAY,QAAKH,EAEb,OADPG,EAAY,KAAIH,EAAeG,EAAY,MACpCA,EAGR,KACCD,EAAEI,UAAYJ,EAAEK,iBACdL,EAAEO,QAAQP,EAAEI,aAAcN,KAC3B,KAAKQ,KAAKN,EAAEO,QAAQP,EAAEI,aAEvBH,EAAY,MAAKD,EAAEO,QAAQP,EAAEI,WAC3BJ,EAAAI,YAGH,OAAIP,EAASW,SAASP,EAAY,OACjCA,EAAY,KAAI,EACTA,IAGRA,EAAY,KAAI,EACTA,EAAA,EC7FI,IAAAQ,GAAAA,IACXA,EAAAA,MAAM,GAAN,MACAA,EAAAC,EAAA,QAAA,GAAA,UACAD,EAAAC,EAAA,WAAA,GAAA,aACAD,EAAAC,EAAA,UAAA,GAAA,YACAD,EAAAC,EAAA,QAAA,GAAA,UACAD,EAAAC,EAAA,KAAA,GAAA,OANWD,IAAAA,GAAA,CAAA,GA0DC,MAAAE,EACZC,IAEO,CACNA,SACAC,YAAaD,EAAOE,OACpBV,UAAW,IAIPW,EAAsB,CAC3BC,EACAC,EACAC,KAEI,GAAAF,EAAEZ,WAAaY,EAAEH,YACpB,MAAO,GAER,GAAIG,EAAEJ,OAAOI,EAAEZ,WAAWF,OAASe,EAClC,MAAO,GAEND,EAAAZ,YACF,MAAMQ,EAAkB,GACxB,IACIX,EADAkB,GAAQ,EAEL,KAAAH,EAAEZ,UAAYY,EAAEH,cACdZ,EAAAe,EAAEJ,OAAOI,EAAEZ,WACjBY,EAAAZ,YACEH,EAAMC,OAASe,GAClBE,IAEGlB,EAAMC,OAASgB,GAClBC,IAEa,IAAVA,IAGJP,EAAOQ,KAAKnB,GAEN,OAAAW,CAAA,EAGFS,EACLL,IAGC,KAAAA,EAAEZ,UAAYY,EAAEH,aAChBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACrBP,EAAU2B,aAETN,EAAAZ,WACH,EA4QKmB,EACLP,IAII,GAFJK,EAAqBL,GAEjBA,EAAEZ,WAAaY,EAAEH,YACb,MAAA,CACNX,KAAM,GAIR,IAAID,EAAQe,EAAEJ,OAAOI,EAAEZ,WAEnB,GADFY,EAAAZ,YACEH,EAAMC,OAASP,EAAU6B,QAC5B,OAAQvB,EAAME,MACb,IAAK,OACL,IAAK,OACJ,MA/EwB,CAC3Ba,IAEA,MAAMS,EAAiB,CACtBvB,KAAM,EACNwB,KAAM,GACNC,KAAM,GACNC,KAAM,IAIH,OADJP,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,cAIrBQ,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,cAIrBY,EAAKC,KAAKN,KAAKJ,EAAEJ,OAAOI,EAAEZ,YACxBY,EAAAZ,YAEFiB,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUkC,aAIXJ,EAAKE,KAAOZ,EACXC,EACArB,EAAUkC,WACVlC,EAAUmC,aAGXT,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUoC,aAIXN,EAAKG,KAAOI,EACXrB,EACCI,EACCC,EACArB,EAAUoC,WACVpC,EAAUsC,mBA1CLR,CA+CD,EAoBGS,CAAoBlB,GAC5B,IAAK,MACL,IAAK,QACJ,MA7R6B,CAChCA,IAEA,MAAMS,EAAsB,CAC3BvB,KAAM,EACN0B,KAAM,GACNO,UAAW,IAIR,OADJd,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUkC,aAKXJ,EAAKU,UAAYpB,EAChBC,EACArB,EAAUkC,WACVlC,EAAUmC,aAGXT,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUoC,aAKXN,EAAKG,KAAOI,EACXrB,EACCI,EACCC,EACArB,EAAUoC,WACVpC,EAAUsC,iBA/BLR,CAoCD,EA8OGW,CAAyBpB,GACjC,IAAK,KACJ,MA7O4B,CAC/BA,IAEA,MAAMS,EAAqB,CAC1BvB,KAAM,EACN0B,KAAM,GACNO,UAAW,IAIR,OADJd,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUoC,aAIXN,EAAKG,KAAOI,EACXrB,EACCI,EACCC,EACArB,EAAUoC,WACVpC,EAAUsC,eAKbZ,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACrBP,EAAU6B,SACoB,UAA/BR,EAAEJ,OAAOI,EAAEZ,WAAWD,OAIrBa,EAAAZ,YAEFiB,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUkC,aAIXJ,EAAKU,UAAYpB,EAChBC,EACArB,EAAUkC,WACVlC,EAAUmC,aAGXT,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAU0C,WAERrB,EAAAZ,eAvDKqB,CA0DD,EAwKGa,CAAwBtB,GAChC,IAAK,KACJ,MAvK0B,CAC7BA,IAEA,MAAMS,EAAmB,CACxBvB,KAAM,EACNiC,UAAW,GACXI,OAAQ,GACRC,SAAU,IAIP,OADJnB,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUkC,aAIXJ,EAAKU,UAAYpB,EAChBC,EACArB,EAAUkC,WACVlC,EAAUmC,aAGXT,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUoC,aAIXN,EAAKc,OAASP,EACbrB,EACCI,EACCC,EACArB,EAAUoC,WACVpC,EAAUsC,eAKbZ,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACrBP,EAAU6B,SACoB,SAA/BR,EAAEJ,OAAOI,EAAEZ,WAAWD,OAIrBa,EAAAZ,YAEFiB,EAAqBL,GACjBA,EAAEZ,WAAaY,EAAEH,aAIpBG,EAAEJ,OAAOI,EAAEZ,WAAWF,OACtBP,EAAUoC,aAIXN,EAAKe,SAAWR,EACfrB,EACCI,EACCC,EACArB,EAAUoC,WACVpC,EAAUsC,mBA9DLR,CAkED,EAyFGgB,CAAsBzB,GAMhC,MAAMS,EAAoB,CACzBvB,KAAM,EACN0B,KAAM,IAGH,GAAA3B,EAAMC,OAASP,EAAU0C,UACrB,OAAAZ,EAKD,IAFFA,EAAAG,KAAKR,KAAKnB,GAERe,EAAEZ,UAAYY,EAAEH,cACdZ,EAAAe,EAAEJ,OAAOI,EAAEZ,WACjBY,EAAAZ,YAEDH,EAAMC,OAASP,EAAU+C,KACzBzC,EAAMC,OAASP,EAAU0C,YAIrBZ,EAAAG,KAAKR,KAAKnB,GAGT,OAAAwB,CAAA,EAGKO,EACZhB,IAEA,MAAM2B,EAAgB,GAClB,IAAAlB,EACJ,KAEY,KADVA,EAAOF,EAA6BP,IACnCd,MAEFyC,EAAMvB,KAAKK,GAGL,OAAAkB,CAAA,ECzbKC,EAERC,IACE,MAAAC,GAAEA,GAAOD,EAGd,OAAAE,EAAAC,IAACC,EAAA,CACAH,GAAI,CACHI,SAAU,WACVC,MAAO,OACPC,OAAQ,UACLN,GAGJO,SAAAN,EAAAC,IAAC,MAAA,CACAM,MAAM,6BACNC,oBAAoB,OACpBC,KAAK,OACLC,QAAQ,UACRC,YAAY,MAEZL,SAAAN,EAAAC,IAAC,OAAA,CACAW,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,OAAO,eACPC,cAAc,aAEhB,EC7BUC,EAERpB,IACE,MAAAC,GAAEA,GAAOD,EAGd,OAAAE,EAAAC,IAACC,EAAA,CACAH,GAAI,CACHI,SAAU,WACVC,MAAO,OACPC,OAAQ,UACLN,GAGJO,SAAAN,EAAAC,IAAC,MAAA,CACAM,MAAM,6BACNC,oBAAoB,OACpBC,KAAK,OACLC,QAAQ,UACRC,YAAY,MAEZL,SAAAN,EAAAC,IAAC,OAAA,CACAW,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,OAAO,eACPC,cAAc,aAEhB,ECdGE,EAEDrB,IACE,MAAAQ,SACLA,EAAAc,UACAA,EAAAC,aACAA,EAAAC,WACAA,EAAAC,YACAA,GACGzB,EAEH,OAAAE,EAAAC,IAACuB,EAAA,CACAzB,GAAI,CACH0B,YAAa,QACbC,gBAAiBJ,EAAa,EAAI,EAClCK,eAAgBP,EAAY,EAAI,EAChCQ,kBAAmBP,EAAe,EAAI,EACtCQ,iBAAkBN,EAAc,EAAI,GAGpCjB,YAAA,EASEwB,EAEDhC,IACJ,MAAMQ,SAAEA,KAAayB,GAASjC,EAG7B,OAAAE,EAAAC,IAAC+B,EAAA,CACAC,QAAS,OACLF,EACJhC,GAAI,CACHmC,WAAY,YACZC,UAAW,aACXC,qBAAsB,gBACnBL,EAAKhC,IAGRO,SAAYA,GAAA,OAAA,EAYV+B,EAEDvC,IACJ,MAAM1C,KAAEA,KAAS2E,GAASjC,EAE1B,aACEqB,EAAwB,IAAGY,EAC3BzB,eAACwB,EAAA,CACCxB,cAEH,EAYWgC,EAERxC,IACJ,MAAMV,UAAEA,EAAAP,KAAWA,KAASkD,GAASjC,EAErC,IAAIyC,EACHvC,EAAAC,IAACoC,EAAA,CACAjB,WAAS,EACTE,YAAU,IAgBX,OAZGzC,EAAKd,OAAS,IACjBwE,EAAW1D,EAAK2D,KAAI,CAACC,EAASC,IAC7B1C,EAAAC,IAAC0C,EAAA,CAEAvB,WAAS,EACTE,YAAU,EACV5C,KAAM+D,GAHD,WAAWC,UASlBE,KAACzB,EAAwB,IAAGY,EAC3BzB,SAAA,GAAAL,IAAC6B,GACCxB,SACFlB,IACCa,EAAAA,IAAAuB,EAAA,CAAIqB,YAAa,EAAIvC,SAASiC,MAChC,EAYWO,EAERhD,IACJ,MAAMV,UAAEA,EAAAP,KAAWA,KAASkD,GAASjC,EAErC,IAAIyC,EACHvC,EAAAC,IAACoC,EAAA,CACAhB,cAAY,EACZC,YAAU,IAcX,OAXGzC,EAAKd,OAAS,IACjBwE,EAAW1D,EAAK2D,KAAI,CAACC,EAASC,IAC7B1C,EAAAC,IAAC0C,EAAA,CAEAjE,KAAM+D,EACNpB,cAAY,EACZC,YAAU,GAHL,WAAWoB,UAQlBE,KAACzB,EAAwB,IAAGY,EAC3BzB,SAAA,CAACL,EAAAA,IAAAuB,EAAA,CAAIqB,YAAa,EAAIvC,SAASiC,MAC/BtC,IAAC6B,GACCxB,SACFlB,MACD,EAaW2D,EAERjD,IACJ,MAAMV,UAAEA,EAAWI,OAAAA,EAAAC,SAAQA,KAAasC,GACvCjC,EAED,IAAIkD,EACH/C,EAAAA,IAACoC,EAAuB,CAAAjB,WAAS,IAE9B5B,EAAOzB,OAAS,IACnBiF,EAAaxD,EAAOgD,KAAI,CAACC,EAASC,IACjC1C,EAAAC,IAAC0C,EAAA,CAEAvB,WAAS,EACT1C,KAAM+D,GAFD,SAASC,QAOjB,IAAIO,EACHhD,EAAAA,IAACoC,EAAuB,CAAAjB,WAAS,IAejC,OAbG3B,EAAS1B,OAAS,IACrBkF,EAAexD,EAAS+C,KACvB,CAACC,EAASC,IACT1C,EAAAC,IAAC0C,EAAA,CAEAvB,WAAS,EACT1C,KAAM+D,GAFD,SAASC,UASjBzC,IAACkB,EAAwB,IAAGY,EAC3BzB,SAAAN,EAAA4C,KAACM,EAAA,CACAC,WAAS,EACT9C,OAAO,OAEPC,SAAA,CAAAN,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,GAEJ/C,WAACL,IAAA6B,EAAA,CAAyBwB,MAAM,SAC9BhD,SACFlB,MAEDY,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,EAEJ/C,SAAAN,EAAA4C,KAACpB,EAAA,CACAnB,OAAO,OACPkD,QAAQ,OACRC,WAAW,SACXC,eAAe,SACftD,SAAS,WAETG,SAAA,CAAAN,EAAAC,IAAC6B,EAAA,CACA/B,GAAI,CACH2D,OAAQ,EACRC,gBAAiBC,EAAK,MAEvBtD,SAAA,WAGDL,IAACJ,EAAwB,CAAAgE,UAAU,eAGrC7D,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,EAEJ/C,SAAAN,EAAA4C,KAACpB,EAAA,CACAnB,OAAO,OACPkD,QAAQ,OACRC,WAAW,SACXC,eAAe,SACftD,SAAS,WAETG,SAAA,CAAAN,EAAAC,IAACiB,EAAwB,IACzBlB,EAAAC,IAAC6B,EAAA,CACA/B,GAAI,CACH2D,OAAQ,EACRC,gBAAiBC,EAAK,MAEvBtD,SAAA,eAKHN,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,EAEJ/C,SAAAN,EAAAC,IAAC6D,EAAA,CACAzD,OAAO,OACPN,GAAI,CACHgE,YAAa,UACbC,iBAAkB,QAClBnC,iBAAkB,GAGlBvB,SAAA0C,MAGHhD,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,EAEJ/C,WAACL,IAAA6D,EAAA,CAAMzD,OAAO,OACZC,SACF2C,UAGH,EAYIgB,EAEDnE,IACJ,MAAMoE,YAAEA,EAAArF,KAAaA,KAASkD,GAASjC,EAEvC,IAAIyC,EACHvC,EAAAC,IAACoC,EAAA,CACAjB,WAAS,EACTE,YAAU,EACVC,aAAW,IAgBZ,OAbG1C,EAAKd,OAAS,IACjBwE,EAAW1D,EAAK2D,KAAI,CAACC,EAASC,IAC7B1C,EAAAC,IAAC0C,EAAA,CAEAjE,KAAM+D,EACNrB,WAAS,EACTE,YAAU,EACVC,aAAW,GAJN,WAAWmB,UAUlBE,KAACzB,EAAwB,IAAGY,EAC3BzB,SAAA,CAACL,EAAAA,IAAA6B,EAAA,CAAyBwB,MAAM,SAC9BhD,SACF4D,IACCjE,EAAAA,IAAAuB,EAAA,CAAI2C,SAAU,EAAI7D,SAASiC,MAC7B,EAII6B,EACL1F,GAGCA,EAAKvB,OAASO,EAAS2G,SACvB3F,EAAKG,KACH2D,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,OAAOxG,OAAS,EAWP4E,EAER7C,IACJ,MAAMpB,KAAEA,KAASqD,GAASjC,EAE1B,OAAQpB,EAAKvB,MACZ,KAAKO,EAAS8G,KAAM,CACnB,IAAI7F,EAAO,MACPD,EAAKC,KAAKZ,OAAS,IACfY,EAAAD,EAAKC,KACV6D,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,KAEF,MAGAJ,EAAc,GAAGvF,KAHVD,EAAKE,KAChB4D,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,OAGN,OAAAtE,EAAAC,IAACgE,EAAA,CACAC,cACArF,KAAMH,EAAKG,QACPkD,GAGP,CAEA,KAAKrE,EAAS+G,WAAY,CACrB,IAAArH,EAQH,OAPGsB,EAAKU,UAAUrB,OAAS,IACpBX,EAAAsB,EAAKU,UACVoD,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,QAGFvE,EAAAC,IAACqC,EAAA,IACIP,EACJ3C,UAAWhC,EACXyB,KAAMH,EAAKG,KAAK6F,OACfN,IAIJ,CACA,KAAK1G,EAASiH,UAAW,CACpB,IAAAvH,EAQH,OAPGsB,EAAKU,UAAUrB,OAAS,IACpBX,EAAAsB,EAAKU,UACVoD,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,QAGFvE,EAAAC,IAAC6C,EAAA,IACIf,EACJ3C,UAAWhC,EACXyB,KAAMH,EAAKG,KAAK6F,OACfN,IAIJ,CACA,KAAK1G,EAASkH,QAAS,CAClB,IAAAxH,EAQH,OAPGsB,EAAKU,UAAUrB,OAAS,IACpBX,EAAAsB,EAAKU,UACVoD,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,QAGFvE,EAAAC,IAAC8C,EAAA,IACIhB,EACJ3C,UAAWhC,EACXoC,OAAQd,EAAKc,OAAOkF,OACnBN,GAED3E,SAAUf,EAAKe,SAASiF,OACvBN,IAIJ,CACA,KAAK1G,EAAS2G,QAAS,CACtB,IAAIjH,EAA2BsB,EAAKG,KAClC2D,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,OAOD,OALmB,IAAhBnH,EAAKW,SACDX,OAAA,GAIP4C,EAAAC,IAACoC,EAAA,IACIN,EACJ3E,QAGH,EAED,aAAQyH,WAAS,CAAA,EAAA,ECrcLC,GAAW,CACvBlF,EACAmF,EACAC,KAEA,IAAIC,EACHjF,EAAAC,IAAC+B,EAAA,CACAE,WAAW,UACXgD,UAAU,SACV5E,SAAA,wBAKF,MAAM6E,EAAgBvF,EAAM8E,QAC1BhG,GACAA,EAAKvB,OAASO,EAAS2G,SACvB3F,EAAKG,KACH2D,KAAKtF,GAAUA,EAAME,OACrBkH,KAAK,IACLC,OAAOxG,OAAS,IAqBnB,OAlBGoH,EAAcpH,OAAS,IAC1BkH,EAAYE,EAAc3C,KACzB,CAAC9D,EAAMgE,IACN1C,EAAAC,IAAC0C,EAAA,CAEAjE,OACA4C,YAAU,EACVF,WAAS,EACTG,aAAW,EACXF,aACCqB,IAAUyC,EAAcpH,OAAS,GAN7B2E,QAcRzC,IAACuB,EAAI,CAAAzB,GAAIiF,EACR1E,SAAAN,EAAAC,IAACuB,EAAA,CACAuD,KACAK,SAAS,QAER9E,SAAA2E,KAEH,EC9CWI,GAERvF,IACJ,MAAMwF,MAAEA,EAAAC,cAAOA,EAAeP,SAAAA,GAC7BlF,EAGA,SAAAG,IAACuB,EAAI,CAAAzB,GAAIiF,EACR1E,SAAAN,EAAAC,IAACuF,EAAA,CACAF,QACAG,SAAUF,EACVG,MAAM,UAER,ECfWC,GAER7F,IACJ,MAAM8F,SAAEA,KAAa7D,GAASjC,EAE9B,OAAI8F,EAED3F,EAAAA,IAAA4F,EAAA,CAAQC,MAAO/D,EAAKzB,SACpBA,SAAAN,EAAA4C,KAACmD,EAAA,IACIhE,EACJiE,eAAW,EACXC,aAAS,EAER3F,SAAA,CAAKyB,EAAAiE,UACLjE,EAAKkE,aAOTjG,EAAAC,IAAC8F,EAAA,IACIhE,EACJiE,UAAWjE,EAAKiE,UAChBC,QAASlE,EAAKkE,QAEb3F,SAAKyB,EAAAzB,UAAA,ECYI4F,GAAiB,KACvB,MAAAC,gBAAEA,GAAoBC,IACtBC,EAAoBC,GACxBZ,GAAUA,EAAMa,YAAYC,KAAK,SAIlCC,EACAC,GACGC,EAAAA,SAAmC,OAEhCC,EAAaC,GAAkBF,EAAAA,UACrC,KACC,MACMG,EADM,IAAIC,IAAIC,OAAOC,SAASC,MAE/BC,aAAaC,IAAI,WACtB,OAAgB,OAAZN,GAIe,SAAZA,CAAY,KAGdlH,EAAOyH,GAAYV,EAAAA,SAAiB,KACpCW,EAAeC,GACrBZ,YAAS,KACR,MACMnJ,EADM,IAAIuJ,IAAIC,OAAOC,SAASC,MAE/BC,aAAaC,IAAI,WACtB,GAAgB,OAAZ5J,EAKI,OAJPwJ,OAAOQ,aAAaC,QACnB,UACAjK,GAEMA,EAGR,MAAMkK,EACLV,OAAOQ,aAAaG,QAAQ,WAC7B,OAAqB,OAAjBD,EACIA,EAED,EAAA,IAGTE,EAAAA,WAAU,KACT,MAAM/J,ERIyB,CAChCZ,IAEA,MAAMY,EAAkB,GACpB,IAAAX,EACJ,KAEY,KADVA,EAAQF,EAA6BC,IACpCE,MAEFU,EAAOQ,KAAKnB,GAEN,OAAAW,CAAA,EQfSgK,CRhDT,CACNrK,SAHDA,EQmDY8J,GRhDMQ,YACjBxK,cAAeE,EAAQsK,YAAY/J,OACnCV,UAAW,IANY,IACxBG,EQqDC,MAAMoC,EAAQX,EACbrB,EAAWC,IAEZwJ,EAASzH,EAAK,GACZ,CAAC0H,IAEJ,MAAMS,EAAkBC,EAAAA,aACtBC,IACAV,EAAiBU,GACVjB,OAAAQ,aAAaC,QAAQ,UAAWQ,EAAC,GAEzC,IAEKC,EAAgBF,EAAAA,aAAYG,UACjC,MAAMC,EAAWC,SAASC,eACzB,8BAEgB,OAAbF,IAGJG,EAAMH,GAAUI,MAAMC,IACR,OAATA,IAGAzB,OAAO0B,OACH1B,OAAA0B,OAAOD,EAAM,wBAEbA,EAAM,eACd,IAEDtC,EAAgB,2BAA4B,CAC3CwC,QAAS,SACT,GACC,CAACxC,IAEEyC,EAAgBZ,EAAAA,aAAYG,UACjC,MAAMC,EAAWC,SAASC,eACzB,8BAEgB,OAAbF,IAGJS,EAAMT,GAAUI,MAAMC,IACR,OAATA,IAGAzB,OAAO0B,OACH1B,OAAA0B,OAAOD,EAAM,wBAEbA,EAAM,eACd,IAEDtC,EAAgB,2BAA4B,CAC3CwC,QAAS,SACT,GACC,CAACxC,IAEE2C,EAAiBd,EAAAA,aAAYG,UAClC,MAAMC,EAAWC,SAASC,eACzB,8BAEgB,OAAbF,IAGJW,EAAOX,GAAUI,MAAMC,IACT,OAATA,IAGAzB,OAAO0B,OACH1B,OAAA0B,OAAOD,EAAM,wBAEbA,EAAM,eACd,IAEDtC,EAAgB,4BAA6B,CAC5CwC,QAAS,SACT,GACC,CAACxC,IAEE6C,EAAsBhB,EAAAA,aAAY,KACxBnB,GAACoC,IAAUA,GAAI,GAC5B,IAEGC,EAAiBlB,EAAAA,aAAY,KAClC,MAAMmB,EAAM,IAAIpC,IAAIC,OAAOC,SAASC,MAChCiC,EAAAhC,aAAaiC,IAAI,UAAW,QAChCD,EAAIhC,aAAaiC,IAChB,UACA9B,GAES+B,UAAAC,UAAUC,UAAUJ,EAAIjC,MAClCf,EAAgB,2BAA4B,CAC3CwC,QAAS,QACT,GACC,CAACrB,EAAenB,IAEbqD,EAA8BxB,EAAAA,aAElCyB,IAEA/C,EACC+C,EAAMC,cAAA,GAGR,IAEKC,EACL3B,EAAAA,aAAY,KACXtB,EAA2B,KAAI,GAC7B,IAEJ,cACE7B,WACA,CAAAvE,SAAA,CAAAN,EAAA4C,KAACpB,EAAA,CACAzB,GAAI,CACHM,OAAQ,QACRuJ,UAAW,UAGZtJ,SAAA,CAAAN,EAAAC,IAAC4J,EAAA,CACAC,QAAM,EACNC,UAAW,EACXhK,GAAI,CACHkC,QAAS,GAGV3B,SAAAN,EAAA4C,KAACkB,EAAA,CACAP,QAAQ,OACRyG,UAAU,MACVvG,eAAe,gBAEfnD,SAAA,GAACsC,KAAAqH,EAAA,CAAYtB,QAAQ,WACpBrI,SAAA,CAAAN,EAAAC,IAAC8F,EAAA,CACAmE,QAASlB,EAER1I,WACE,YACA,cAEJN,EAAAC,IAAC8F,EAAA,CACAmB,KAAK,mFACLjC,UAAU,IACVkF,OAAO,SACPlE,cAAUmE,EAAc,IACxB9J,SAAA,cAIFsC,KAACqH,EAAY,CAAAtB,QAAQ,WACpBrI,SAAA,CAAAN,EAAAC,IAAC0F,GAAA,CACAC,SAAUS,EACVL,gBAAYqE,EAAgB,IAC5BH,QACCV,EAEDlJ,SAAA,WAGDN,EAAAC,IAAC0F,GAAA,CACAC,SAAUS,EACVJ,cAAUqE,EAAY,IACtBJ,QAAShB,EACT5I,SAAA,kBAMHL,MAAAuB,EAAA,CACAlB,SAACsC,EAAAA,KAAAM,EAAA,CAAKC,WAAS,EACd7C,SAAA,CAAAN,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,GAAI,GACJkH,GAAI,EACJhH,QACCqD,EAAc,YAAS,EAGxBtG,SAAAN,EAAAC,IAACoF,GAAA,CACAC,MAAOgC,EACP/B,cAAewC,EACf/C,SAAU,CACT4E,UAAW,OACXvJ,OAAQ,aAIXL,EAAAC,IAACiD,EAAA,CACAE,MAAI,EACJC,IAAE,EACFkH,IAAE,EACFhH,QACC8C,IAAsBO,EACnB,YACA,EAGHtG,SAAAwE,GACAlF,EACA,6BACA,CACCqC,QAAS,EACT2H,UAAW,OACXjG,gBAAiBC,EAAK,KACtBG,YAAaH,EAAK,KAClBvD,OAAQ,QACRmK,WAAY,mBAOlBxK,EAAAC,IAACwK,EAAA,CACAC,aAAc,CACbC,SAAU,SACVC,WAAY,QAEbC,gBAAiB,CAChBF,SAAU,MACVC,WAAY,QAEbE,SAAUrE,EACVsE,KAAkC,OAA5BtE,EACNuE,QAASrB,EAETrJ,SAAAN,EAAAC,IAAC4J,EAAA,CACA9J,GAAI,CACHkC,QAAS,GAGV3B,gBAAC2K,EACA,CAAA3K,SAAA,GAACsC,KAAAsI,EAAA,CAAShB,QAASpB,EAClBxI,SAAA,OAAC6K,EACA,CAAA7K,SAAAL,EAAAA,IAACoK,EAAgB,CAAAe,SAAS,cAE3BnL,IAACoL,GAAa/K,SAEd,sBAEDsC,KAACsI,EAAS,CAAAhB,QAAStB,EAClBtI,SAAA,OAAC6K,EACA,CAAA7K,SAAAL,EAAAA,IAACoK,EAAgB,CAAAe,SAAS,cAE3BnL,IAACoL,GAAa/K,SAEd,qBAEDsC,KAACsI,EAAS,CAAAhB,QAAShC,EAClB5H,SAAA,OAAC6K,EACA,CAAA7K,SAAAL,EAAAA,IAACoK,EAAgB,CAAAe,SAAS,cAE3BnL,IAACoL,GAAa/K,SAEd,4BAKL,ECzVIgL,GAAYC,EAAY,CAC7BC,QAAS,CACRC,KAAM,UAIKC,GAAU,WAEpB7G,WACA,CAAAvE,SAAA,CAAAN,EAAAC,IAAC0L,EAAY,MACb1L,IAAC2L,EAAc,CAAAlG,MAAO4F,GACrBhL,SAAAN,EAAAC,IAAC4L,EAAA,CACAC,kBAAgB,EAChBC,iBAAkB,IAClBrB,aAAc,CACbC,SAAU,MACVC,WAAY,UAGbtK,eAAC4F,GAAW,WCzBjB8F,EAASC,WACR5D,SAASC,eAAe,SACvB4D,aACAC,EAAMC,WAAN,CACA9L,SAAAL,EAAAA,IAACyL,IAAI"}