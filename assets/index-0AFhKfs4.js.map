{"version":3,"file":"index-0AFhKfs4.js","sources":["../../src/interpreter/lexer.ts","../../src/interpreter/parser.ts","../../src/renderer/ArrowTopLeftBottomRight.tsx","../../src/renderer/ArrowBottomLeftTopRight.tsx","../../src/renderer/StructogramNode.tsx","../../src/renderer/renderer.tsx","../../src/components/StructogramCodeEditor/StructogramCodeEditor.tsx","../../src/components/AdaptiveButton.tsx","../../src/routes/EditorPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["export enum TokenKind {\r\n\tEND = 0,\r\n\tSYMBOL,\r\n\tKEYWORD,\r\n\r\n\tLEFT_PAREN,\r\n\tRIGHT_PAREN,\r\n\tLEFT_CURLY,\r\n\tRIGHT_CURLY,\r\n\tSEMICOLON,\r\n\tWHITE_SPACE,\r\n}\r\n\r\nexport type Token = {\r\n\tkind: TokenKind;\r\n\ttext: string;\r\n};\r\n\r\nconst KEYWORDS: string[] = [\r\n\t\"for\",\r\n\t\"if\",\r\n\t\"else\",\r\n\t\"while\",\r\n\t\"do\",\r\n];\r\n\r\nconst LITERAL_TOKENS: Record<string, TokenKind> =\r\n\t{\r\n\t\t\"{\": TokenKind.LEFT_CURLY,\r\n\t\t\"}\": TokenKind.RIGHT_CURLY,\r\n\t\t\"(\": TokenKind.LEFT_PAREN,\r\n\t\t\")\": TokenKind.RIGHT_PAREN,\r\n\t\t\";\": TokenKind.SEMICOLON,\r\n\t\t\" \": TokenKind.WHITE_SPACE,\r\n\t};\r\n\r\nexport type Lexer = {\r\n\tcontent: string;\r\n\tcontentLength: number;\r\n\tcursorPos: number;\r\n};\r\n\r\nconst cleanContent = (\r\n\tcontent: string,\r\n): string => {\r\n\tlet cleanedContent = \"\";\r\n\r\n\tconst length = content.length;\r\n\tlet i = 0;\r\n\twhile (i < length) {\r\n\t\tcleanedContent += content[i];\r\n\t\ti++;\r\n\r\n\t\tif (cleanedContent.endsWith(\"//\")) {\r\n\t\t\tcleanedContent = cleanedContent.slice(\r\n\t\t\t\t0,\r\n\t\t\t\t-2,\r\n\t\t\t);\r\n\r\n\t\t\twhile (i < length && content[i] !== \"\\n\") {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn cleanedContent;\r\n};\r\n\r\nexport const lexerInit = (\r\n\tcontent: string,\r\n): Lexer => {\r\n\tconst cleanedContent = cleanContent(\r\n\t\tcontent.normalize(),\r\n\t).replace(/\\s+/g, \" \");\r\n\r\n\treturn {\r\n\t\tcontent: cleanedContent,\r\n\t\tcontentLength: cleanedContent.length,\r\n\t\tcursorPos: 0,\r\n\t};\r\n};\r\n\r\nexport const lexerGetNextTokenThenAdvance = (\r\n\tl: Lexer,\r\n): Token => {\r\n\tconst token = {\r\n\t\tkind: TokenKind.END,\r\n\t\ttext: \"\",\r\n\t};\r\n\r\n\tif (l.cursorPos >= l.contentLength) {\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken.text = l.content[l.cursorPos];\r\n\tl.cursorPos++;\r\n\r\n\tif (token.text in LITERAL_TOKENS) {\r\n\t\ttoken.kind = LITERAL_TOKENS[token.text];\r\n\t\treturn token;\r\n\t}\r\n\r\n\twhile (\r\n\t\tl.cursorPos < l.contentLength &&\r\n\t\t!(l.content[l.cursorPos] in LITERAL_TOKENS) &&\r\n\t\tl.content[l.cursorPos] !== \" \"\r\n\t) {\r\n\t\ttoken.text += l.content[l.cursorPos];\r\n\t\tl.cursorPos++;\r\n\t}\r\n\r\n\tif (KEYWORDS.includes(token.text)) {\r\n\t\ttoken.kind = TokenKind.KEYWORD;\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken.kind = TokenKind.SYMBOL;\r\n\treturn token;\r\n};\r\n\r\nexport const lexerGetAllTokens = (\r\n\tl: Lexer,\r\n): Token[] => {\r\n\tconst tokens: Token[] = [];\r\n\tlet token: Token;\r\n\twhile (\r\n\t\t(token = lexerGetNextTokenThenAdvance(l))\r\n\t\t\t.kind !== TokenKind.END\r\n\t) {\r\n\t\ttokens.push(token);\r\n\t}\r\n\treturn tokens;\r\n};\r\n","import { Token, TokenKind } from \"./lexer\";\r\n\r\nexport enum NodeKind {\r\n\tEND = 0,\r\n\tPROCESS,\r\n\tLOOP_FIRST,\r\n\tLOOP_LAST,\r\n\tIF_ELSE,\r\n\tFUNC,\r\n}\r\n\r\ntype NodeEnd = {\r\n\tkind: NodeKind.END;\r\n};\r\n\r\ntype NodeProcess = {\r\n\tkind: NodeKind.PROCESS;\r\n\tbody: Token[];\r\n};\r\n\r\ntype NodeLoopFirst = {\r\n\tkind: NodeKind.LOOP_FIRST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeLoopLast = {\r\n\tkind: NodeKind.LOOP_LAST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeIfElse = {\r\n\tkind: NodeKind.IF_ELSE;\r\n\tcondition: Token[];\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n};\r\n\r\ntype NodeFunc = {\r\n\tkind: NodeKind.FUNC;\r\n\treturnType: Token[];\r\n\tname: Token[];\r\n\targs: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\nexport type Node =\r\n\t| NodeEnd\r\n\t| NodeProcess\r\n\t| NodeLoopFirst\r\n\t| NodeLoopLast\r\n\t| NodeIfElse\r\n\t| NodeFunc;\r\n\r\nexport type Parser = {\r\n\ttokens: Token[];\r\n\ttokenLength: number;\r\n\tcursorPos: number;\r\n};\r\n\r\nexport const parserInit = (\r\n\ttokens: Token[],\r\n): Parser => {\r\n\treturn {\r\n\t\ttokens: tokens,\r\n\t\ttokenLength: tokens.length,\r\n\t\tcursorPos: 0,\r\n\t};\r\n};\r\n\r\nconst parserCollectTokens = (\r\n\tp: Parser,\r\n\tstartToken: TokenKind,\r\n\tstopToken: TokenKind,\r\n): Token[] => {\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn [];\r\n\t}\r\n\tif (p.tokens[p.cursorPos].kind !== startToken) {\r\n\t\treturn [];\r\n\t}\r\n\tp.cursorPos++;\r\n\tconst tokens: Token[] = [];\r\n\tlet depth = -1;\r\n\tlet token: Token;\r\n\twhile (p.cursorPos < p.tokenLength) {\r\n\t\ttoken = p.tokens[p.cursorPos];\r\n\t\tp.cursorPos++;\r\n\t\tif (token.kind === startToken) {\r\n\t\t\tdepth--;\r\n\t\t}\r\n\t\tif (token.kind === stopToken) {\r\n\t\t\tdepth++;\r\n\t\t}\r\n\t\tif (depth === 0) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\ttokens.push(token);\r\n\t}\r\n\treturn tokens;\r\n};\r\n\r\nconst parserSkipWhiteSpace = (\r\n\tp: Parser,\r\n): void => {\r\n\twhile (\r\n\t\tp.cursorPos < p.tokenLength &&\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\t\tTokenKind.WHITE_SPACE\r\n\t) {\r\n\t\tp.cursorPos++;\r\n\t}\r\n};\r\n\r\n// for (kgfdglkl;fdkglfdkglkfgl) {\r\n\r\n// }\r\n\r\nconst parserBuildLoopFirstNode = (\r\n\tp: Parser,\r\n): NodeLoopFirst => {\r\n\tconst node: NodeLoopFirst = {\r\n\t\tkind: NodeKind.LOOP_FIRST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildLoopLastNode = (\r\n\tp: Parser,\r\n): NodeLoopLast => {\r\n\tconst node: NodeLoopLast = {\r\n\t\tkind: NodeKind.LOOP_LAST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"while\"\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tp.cursorPos++; // consume the \"while\" keyword\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\tTokenKind.SEMICOLON\r\n\t) {\r\n\t\tp.cursorPos++; // consume the semicolon\r\n\t}\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildIfElseNode = (\r\n\tp: Parser,\r\n): NodeIfElse => {\r\n\tconst node: NodeIfElse = {\r\n\t\tkind: NodeKind.IF_ELSE,\r\n\t\tcondition: [],\r\n\t\tbodyIf: [],\r\n\t\tbodyElse: [],\r\n\t};\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.condition = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.bodyIf = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"else\"\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tp.cursorPos++; // consume the \"else\" keyword\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn node;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\tnode.bodyElse = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\treturn node;\r\n};\r\n\r\nconst isFuncNodeSequence = (\r\n\tp: Parser,\r\n): boolean => {\r\n\tconst originalPos = p.cursorPos;\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.SYMBOL\r\n\t) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\tp.cursorPos++; // consume the \"return type\"\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.SYMBOL\r\n\t) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\tp.cursorPos++; // consume the \"function name\"\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tparserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tp.cursorPos = originalPos;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tp.cursorPos = originalPos;\r\n\treturn true;\r\n};\r\n\r\nconst parserBuildFuncNode = (\r\n\tp: Parser,\r\n): NodeFunc => {\r\n\tconst node: NodeFunc = {\r\n\t\tkind: NodeKind.FUNC,\r\n\t\treturnType: [],\r\n\t\tname: [],\r\n\t\targs: [],\r\n\t\tbody: [],\r\n\t};\r\n\r\n\tnode.returnType.push(p.tokens[p.cursorPos]);\r\n\tp.cursorPos++; // consume the return type\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tnode.name.push(p.tokens[p.cursorPos]);\r\n\tp.cursorPos++; // consume the function name\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tnode.args = parserCollectTokens(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(\r\n\t\t\tparserCollectTokens(\r\n\t\t\t\tp,\r\n\t\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserGetNextNodeThenAdvance = (\r\n\tp: Parser,\r\n): Node => {\r\n\tparserSkipWhiteSpace(p);\r\n\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.END,\r\n\t\t};\r\n\t}\r\n\r\n\tlet token = p.tokens[p.cursorPos];\r\n\tp.cursorPos++;\r\n\tif (token.kind === TokenKind.KEYWORD) {\r\n\t\tswitch (token.text) {\r\n\t\t\tcase \"for\":\r\n\t\t\tcase \"while\":\r\n\t\t\t\treturn parserBuildLoopFirstNode(p);\r\n\t\t\tcase \"do\":\r\n\t\t\t\treturn parserBuildLoopLastNode(p);\r\n\t\t\tcase \"if\":\r\n\t\t\t\treturn parserBuildIfElseNode(p);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tp.cursorPos--;\r\n\tif (isFuncNodeSequence(p)) {\r\n\t\treturn parserBuildFuncNode(p);\r\n\t}\r\n\r\n\tp.cursorPos++;\r\n\tconst node: NodeProcess = {\r\n\t\tkind: NodeKind.PROCESS,\r\n\t\tbody: [],\r\n\t};\r\n\r\n\tif (token.kind === TokenKind.SEMICOLON) {\r\n\t\treturn node;\r\n\t}\r\n\r\n\tnode.body.push(token);\r\n\r\n\twhile (p.cursorPos < p.tokenLength) {\r\n\t\ttoken = p.tokens[p.cursorPos];\r\n\t\tp.cursorPos++;\r\n\t\tif (\r\n\t\t\ttoken.kind === TokenKind.END ||\r\n\t\t\ttoken.kind === TokenKind.SEMICOLON\r\n\t\t) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tnode.body.push(token);\r\n\t}\r\n\r\n\treturn node;\r\n};\r\n\r\nexport const parserGetAllNodes = (\r\n\tp: Parser,\r\n): Node[] => {\r\n\tconst nodes: Node[] = [];\r\n\tlet node: Node;\r\n\twhile (\r\n\t\t(node = parserGetNextNodeThenAdvance(p))\r\n\t\t\t.kind !== NodeKind.END\r\n\t) {\r\n\t\tnodes.push(node);\r\n\t}\r\n\r\n\treturn nodes;\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowTopLeftBottomRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"5\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowBottomLeftTopRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"5\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"0\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC, Fragment, ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tTypographyProps,\r\n\tTypography,\r\n\tStack,\r\n} from \"@mui/material\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nimport { ArrowTopLeftBottomRight } from \"./ArrowTopLeftBottomRight\";\r\nimport { ArrowBottomLeftTopRight } from \"./ArrowBottomLeftTopRight\";\r\nimport { Node, NodeKind } from \"interpreter\";\r\n\r\ntype StructogramNodeWrapperProps = {\r\n\tchildren: ReactNode | ReactNode[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeWrapper: FC<\r\n\tStructogramNodeWrapperProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tchildren,\r\n\t\tborderTop,\r\n\t\tborderBottom,\r\n\t\tborderLeft,\r\n\t\tborderRight,\r\n\t} = props;\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\tborderStyle: \"solid\",\r\n\t\t\t\tborderLeftWidth: borderLeft ? 2 : 0,\r\n\t\t\t\tborderTopWidth: borderTop ? 2 : 0,\r\n\t\t\t\tborderBottomWidth: borderBottom ? 2 : 0,\r\n\t\t\t\tborderRightWidth: borderRight ? 2 : 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\ntype StructogramComponentTextProps =\r\n\tTypographyProps & {\r\n\t\tchildren?: string;\r\n\t};\r\nconst StructogramComponentText: FC<\r\n\tStructogramComponentTextProps\r\n> = (props) => {\r\n\tconst { children, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tpadding={1.5}\r\n\t\t\t{...rest}\r\n\t\t\tsx={{\r\n\t\t\t\tfontFamily: \"Fira Code\",\r\n\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\tfontVariantLigatures: \"contextual\",\r\n\t\t\t\t...rest.sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children ?? \"-\"}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeProcessProps = {\r\n\ttext?: string;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeProcess: FC<\r\n\tStructogramNodeProcessProps\r\n> = (props) => {\r\n\tconst { text, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{text}\r\n\t\t\t</StructogramComponentText>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeLoopFirstProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeLoopFirst: FC<\r\n\tStructogramNodeLoopFirstProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</StructogramComponentText>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeLoopLastProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeLoopLast: FC<\r\n\tStructogramNodeLoopLastProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderBottom\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderBottom\r\n\t\t\t\tborderLeft\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t\t<StructogramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</StructogramComponentText>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeIfElseProps = {\r\n\tcondition?: string;\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNodeIfElse: FC<\r\n\tStructogramNodeIfElseProps\r\n> = (props) => {\r\n\tconst { condition, bodyIf, bodyElse, ...rest } =\r\n\t\tprops;\r\n\r\n\tlet bodyNodeIf: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyIf.length > 0) {\r\n\t\tbodyNodeIf = bodyIf.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\tlet bodyNodeElse: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyElse.length > 0) {\r\n\t\tbodyNodeElse = bodyElse.map(\r\n\t\t\t(subnode, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tnode={subnode}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t>\r\n\t\t\t\t\t<StructogramComponentText align=\"center\">\r\n\t\t\t\t\t\t{condition}\r\n\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StructogramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tTrue\r\n\t\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t\t\t<ArrowTopLeftBottomRight htmlColor=\"black\" />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ArrowBottomLeftTopRight />\r\n\t\t\t\t\t\t<StructogramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFalse\r\n\t\t\t\t\t\t</StructogramComponentText>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tborderColor: \"inherit\",\r\n\t\t\t\t\t\t\tborderRightStyle: \"solid\",\r\n\t\t\t\t\t\t\tborderRightWidth: 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{bodyNodeIf}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack height=\"100%\">\r\n\t\t\t\t\t\t{bodyNodeElse}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\ntype StructogramNodeFuncProps = {\r\n\tdeclaration: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst StructogramNodeFunc: FC<\r\n\tStructogramNodeFuncProps\r\n> = (props) => {\r\n\tconst { declaration, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<StructogramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t\tborderRight\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tborderRight\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StructogramNodeWrapper {...rest}>\r\n\t\t\t<StructogramComponentText align=\"center\">\r\n\t\t\t\t{declaration}\r\n\t\t\t</StructogramComponentText>\r\n\t\t\t<Box paddingX={2}>{bodyNode}</Box>\r\n\t\t</StructogramNodeWrapper>\r\n\t);\r\n};\r\n\r\nconst fitlerEmptyProcessNodes = (\r\n\tnode: Node,\r\n): boolean => {\r\n\treturn (\r\n\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\tnode.body\r\n\t\t\t.map((token) => token.text)\r\n\t\t\t.join(\"\")\r\n\t\t\t.trim().length > 0\r\n\t);\r\n};\r\n\r\ntype StructogramNodeProps = {\r\n\tnode: Node;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNode: FC<\r\n\tStructogramNodeProps\r\n> = (props) => {\r\n\tconst { node, ...rest } = props;\r\n\r\n\tswitch (node.kind) {\r\n\t\tcase NodeKind.FUNC: {\r\n\t\t\tconst name = node.name\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tconst args = node.args\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tconst returnType = node.returnType\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\");\r\n\t\t\tconst declaration = ` ${returnType} ${name}(${args})`;\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeFunc\r\n\t\t\t\t\tdeclaration={declaration}\r\n\t\t\t\t\tbody={node.body}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcase NodeKind.LOOP_FIRST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeLoopFirst\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.LOOP_LAST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeLoopLast\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.IF_ELSE: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeIfElse\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbodyIf={node.bodyIf.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tbodyElse={node.bodyElse.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.PROCESS: {\r\n\t\t\tlet text: string | undefined = node.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim();\r\n\r\n\t\t\tif (text.length === 0) {\r\n\t\t\t\ttext = undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<StructogramNodeProcess\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\ttext={text}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <Fragment />;\r\n};\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tSxProps,\r\n\tTypography,\r\n} from \"@mui/material\";\r\n\r\nimport { Node, NodeKind } from \"interpreter\";\r\nimport { StructogramNode } from \"renderer/StructogramNode\";\r\n\r\nexport const renderer = (\r\n\tnodes: Node[],\r\n\tid: string,\r\n\tboxProps: SxProps,\r\n): ReactNode => {\r\n\tlet component: ReactNode | ReactNode[] = (\r\n\t\t<Typography\r\n\t\t\tfontFamily=\"inherit\"\r\n\t\t\tfontStyle=\"italic\"\r\n\t\t>\r\n\t\t\tNothing to display.\r\n\t\t</Typography>\r\n\t);\r\n\r\n\tconst filteredNodes = nodes.filter(\r\n\t\t(node) =>\r\n\t\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\t\tnode.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim().length > 0,\r\n\t);\r\n\r\n\tif (filteredNodes.length > 0) {\r\n\t\tcomponent = filteredNodes.map(\r\n\t\t\t(node, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tnode={node}\r\n\t\t\t\t\tborderLeft\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tborderRight\r\n\t\t\t\t\tborderBottom={\r\n\t\t\t\t\t\tindex === filteredNodes.length - 1\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box sx={boxProps}>\r\n\t\t\t<Box\r\n\t\t\t\tid={id}\r\n\t\t\t\tmaxWidth=\"640px\"\r\n\t\t\t>\r\n\t\t\t\t{component}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport { Box, SxProps } from \"@mui/material\";\r\n\r\nimport ReactCodeMirror from \"@uiw/react-codemirror\";\r\n\r\nimport \"./styles.css\";\r\n\r\ntype StructogramCodeEditorProps = {\r\n\tvalue: string;\r\n\tonValueChange?: (value: string) => void;\r\n\tboxProps?: SxProps;\r\n};\r\nexport const StructogramCodeEditor: FC<\r\n\tStructogramCodeEditorProps\r\n> = (props) => {\r\n\tconst { value, onValueChange, boxProps } =\r\n\t\tprops;\r\n\r\n\treturn (\r\n\t\t<Box sx={boxProps}>\r\n\t\t\t<ReactCodeMirror\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onValueChange}\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonProps,\r\n\tTooltip,\r\n} from \"@mui/material\";\r\n\r\ntype AdaptiveButtonProps = ButtonProps & {\r\n\tcollapse: boolean;\r\n};\r\nexport const AdaptiveButton: FC<\r\n\tAdaptiveButtonProps\r\n> = (props) => {\r\n\tconst { collapse, ...rest } = props;\r\n\r\n\tif (collapse) {\r\n\t\treturn (\r\n\t\t\t<Tooltip title={rest.children}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tstartIcon={undefined}\r\n\t\t\t\t\tendIcon={undefined}\r\n\t\t\t\t>\r\n\t\t\t\t\t{rest.startIcon}\r\n\t\t\t\t\t{rest.endIcon}\r\n\t\t\t\t</Button>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...rest}\r\n\t\t\tstartIcon={rest.startIcon}\r\n\t\t\tendIcon={rest.endIcon}\r\n\t\t>\r\n\t\t\t{rest.children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n","import {\r\n\tFC,\r\n\tFragment,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tStack,\r\n\tPaper,\r\n\tButton,\r\n\tMenuList,\r\n\tListItemText,\r\n\tButtonGroup,\r\n\tPopover,\r\n\tMenuItem,\r\n\tListItemIcon,\r\n\tuseMediaQuery,\r\n\tTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n\tDownloadRounded,\r\n\tLaunchRounded,\r\n\tSendRounded,\r\n} from \"@mui/icons-material\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n\ttoJpeg,\r\n\ttoPng,\r\n\ttoSvg,\r\n} from \"html-to-image\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n\tlexerGetAllTokens,\r\n\tlexerInit,\r\n\tNode,\r\n\tparserGetAllNodes,\r\n\tparserInit,\r\n} from \"interpreter\";\r\nimport { renderer } from \"renderer/renderer\";\r\n\r\nimport { StructogramCodeEditor } from \"components/StructogramCodeEditor\";\r\nimport { AdaptiveButton } from \"components/AdaptiveButton\";\r\n\r\nexport const EditorPage: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\tconst appBarRef = useRef<HTMLDivElement | null>(\r\n\t\tnull,\r\n\t);\r\n\tconst [\r\n\t\tappBarStaticHeight,\r\n\t\tsetAppBarStaticHeight,\r\n\t] = useState<number>(0);\r\n\tconst matchBreakpointXs = useMediaQuery<Theme>(\r\n\t\t(theme) => theme.breakpoints.down(\"md\"),\r\n\t);\r\n\r\n\tconst [\r\n\t\tpopoverExportMenuAnchor,\r\n\t\tsetPopoverExportMenuAnchor,\r\n\t] = useState<HTMLButtonElement | null>(null);\r\n\tconst [previewOpen, setPreviewOpen] = useState(\r\n\t\t() => {\r\n\t\t\tconst url = new URL(window.location.href);\r\n\t\t\tconst preview =\r\n\t\t\t\turl.searchParams.get(\"preview\");\r\n\t\t\tif (preview === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn preview === \"true\";\r\n\t\t},\r\n\t);\r\n\tconst [nodes, setNodes] = useState<Node[]>([]);\r\n\tconst [editorContent, setEditorContent] =\r\n\t\tuseState(() => {\r\n\t\t\tconst url = new URL(window.location.href);\r\n\t\t\tconst content =\r\n\t\t\t\turl.searchParams.get(\"content\");\r\n\t\t\tif (content !== null) {\r\n\t\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t\t\"content\",\r\n\t\t\t\t\tcontent,\r\n\t\t\t\t);\r\n\t\t\t\treturn content;\r\n\t\t\t}\r\n\r\n\t\t\tconst savedContent =\r\n\t\t\t\twindow.localStorage.getItem(\"content\");\r\n\t\t\tif (savedContent !== null) {\r\n\t\t\t\treturn savedContent;\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (appBarRef.current === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetAppBarStaticHeight(\r\n\t\t\tappBarRef.current.getBoundingClientRect()\r\n\t\t\t\t.height,\r\n\t\t);\r\n\t}, [appBarRef]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tokens = lexerGetAllTokens(\r\n\t\t\tlexerInit(editorContent),\r\n\t\t);\r\n\r\n\t\tconst nodes = parserGetAllNodes(\r\n\t\t\tparserInit(tokens),\r\n\t\t);\r\n\t\tsetNodes(nodes);\r\n\t}, [editorContent]);\r\n\r\n\tconst onContentChange = useCallback(\r\n\t\t(v: string) => {\r\n\t\t\tsetEditorContent(v);\r\n\t\t\twindow.localStorage.setItem(\"content\", v);\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\tconst handleSaveSVG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoSvg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as SVG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handleSavePNG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoPng(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as PNG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handleSaveJPEG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoJpeg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (window.saveAs) {\r\n\t\t\t\twindow.saveAs(blob, \"structogram\");\r\n\t\t\t} else {\r\n\t\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tenqueueSnackbar(\"Saved structogram as JPEG\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar]);\r\n\r\n\tconst handlePreviewToggle = useCallback(() => {\r\n\t\tsetPreviewOpen((prev) => !prev);\r\n\t}, []);\r\n\r\n\tconst handleCopyLink = useCallback(() => {\r\n\t\tconst url = new URL(window.location.href);\r\n\t\turl.searchParams.set(\"preview\", \"true\");\r\n\t\turl.searchParams.set(\r\n\t\t\t\"content\",\r\n\t\t\teditorContent,\r\n\t\t);\r\n\t\tnavigator.clipboard.writeText(url.href);\r\n\t\tenqueueSnackbar(\"Copied link to clipboard\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [editorContent, enqueueSnackbar]);\r\n\r\n\tconst handlePopoverExportMenuOpen = useCallback(\r\n\t\t(\r\n\t\t\tevent: React.MouseEvent<HTMLButtonElement>,\r\n\t\t) => {\r\n\t\t\tsetPopoverExportMenuAnchor(\r\n\t\t\t\tevent.currentTarget,\r\n\t\t\t);\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\tconst handlePopoverExportMenuClose =\r\n\t\tuseCallback(() => {\r\n\t\t\tsetPopoverExportMenuAnchor(null);\r\n\t\t}, []);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tref={appBarRef}\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handlePreviewToggle}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"Show code\"\r\n\t\t\t\t\t\t\t\t\t: \"Hide code\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\thref=\"https://eurydia.github.io/project-nassi-shneiderman-diagram-builder-online-docs/\"\r\n\t\t\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\tendIcon={<LaunchRounded />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tdocs\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tstartIcon={<DownloadRounded />}\r\n\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\thandlePopoverExportMenuOpen\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEXPORT\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tendIcon={<SendRounded />}\r\n\t\t\t\t\t\t\t\tonClick={handleCopyLink}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSHARE\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tpreviewOpen ? \"none\" : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StructogramCodeEditor\r\n\t\t\t\t\t\t\t\tvalue={editorContent}\r\n\t\t\t\t\t\t\t\tonValueChange={onContentChange}\r\n\t\t\t\t\t\t\t\tboxProps={{\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\theight: `calc(100vh - ${appBarStaticHeight}px)`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs\r\n\t\t\t\t\t\t\tlg\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tmatchBreakpointXs && !previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderer(\r\n\t\t\t\t\t\t\t\tnodes,\r\n\t\t\t\t\t\t\t\t\"structogram-preview-region\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpadding: 4,\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t\t\tborderColor: grey[700],\r\n\t\t\t\t\t\t\t\t\tuserSelect: \"none\",\r\n\t\t\t\t\t\t\t\t\theight: `calc(100vh - ${appBarStaticHeight}px)`,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Popover\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={popoverExportMenuAnchor}\r\n\t\t\t\topen={popoverExportMenuAnchor !== null}\r\n\t\t\t\tonClose={handlePopoverExportMenuClose}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuList>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSaveJPEG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as JPEG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSavePNG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as PNG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={handleSaveSVG}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as SVG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</MenuList>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Popover>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { Fragment, FC } from \"react\";\r\nimport {\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nimport { EditorPage } from \"routes/EditorPage\";\r\n\r\nconst themeDark = createTheme({\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t},\r\n});\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<ThemeProvider theme={themeDark}>\r\n\t\t\t\t<SnackbarProvider\r\n\t\t\t\t\tpreventDuplicate\r\n\t\t\t\t\tautoHideDuration={2000}\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EditorPage />\r\n\t\t\t\t</SnackbarProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport { App } from \"./App.tsx\";\r\n\r\nReactDOM.createRoot(\r\n\tdocument.getElementById(\"root\")!,\r\n).render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n);\r\n"],"names":["TokenKind","TokenKind2","KEYWORDS","LITERAL_TOKENS","lexerGetNextTokenThenAdvance","l","token","kind","text","cursorPos","contentLength","content","includes","NodeKind","NodeKind2","parserInit","tokens","tokenLength","length","parserCollectTokens","p","startToken","stopToken","depth","push","parserSkipWhiteSpace","WHITE_SPACE","parserGetNextNodeThenAdvance","KEYWORD","node","body","condition","LEFT_PAREN","RIGHT_PAREN","LEFT_CURLY","parserGetAllNodes","RIGHT_CURLY","parserBuildLoopFirstNode","SEMICOLON","parserBuildLoopLastNode","bodyIf","bodyElse","parserBuildIfElseNode","originalPos","SYMBOL","isFuncNodeSequence","returnType","name","args","parserBuildFuncNode","END","nodes","ArrowTopLeftBottomRight","props","sx","jsxRuntimeExports","jsx","SvgIcon","position","width","height","children","xmlns","preserveAspectRatio","fill","viewBox","strokeWidth","x1","y1","x2","y2","stroke","strokeLinecap","ArrowBottomLeftTopRight","StructogramNodeWrapper","borderTop","borderBottom","borderLeft","borderRight","Box","borderStyle","borderLeftWidth","borderTopWidth","borderBottomWidth","borderRightWidth","StructogramComponentText","rest","Typography","padding","fontFamily","wordBreak","fontVariantLigatures","StructogramNodeProcess","StructogramNodeLoopFirst","bodyNode","map","subnode","index","StructogramNode","jsxs","paddingLeft","StructogramNodeLoopLast","StructogramNodeIfElse","bodyNodeIf","bodyNodeElse","Grid","container","item","xs","align","display","alignItems","justifyContent","zIndex","backgroundColor","grey","htmlColor","Stack","borderColor","borderRightStyle","StructogramNodeFunc","declaration","paddingX","fitlerEmptyProcessNodes","PROCESS","join","trim","FUNC","LOOP_FIRST","filter","LOOP_LAST","IF_ELSE","Fragment","renderer","id","boxProps","component","fontStyle","filteredNodes","maxWidth","StructogramCodeEditor","value","onValueChange","ReactCodeMirror","onChange","theme","AdaptiveButton","collapse","Tooltip","title","Button","startIcon","endIcon","EditorPage","enqueueSnackbar","useSnackbar","appBarRef","useRef","appBarStaticHeight","setAppBarStaticHeight","useState","matchBreakpointXs","useMediaQuery","breakpoints","down","popoverExportMenuAnchor","setPopoverExportMenuAnchor","previewOpen","setPreviewOpen","preview","URL","window","location","href","searchParams","get","setNodes","editorContent","setEditorContent","localStorage","setItem","savedContent","getItem","useEffect","current","getBoundingClientRect","lexerGetAllTokens","cleanedContent","i","endsWith","slice","cleanContent","normalize","replace","lexerInit","onContentChange","useCallback","v","handleSaveSVG","async","HTMLNode","document","getElementById","toSvg","then","blob","saveAs","variant","handleSavePNG","toPng","handleSaveJPEG","toJpeg","handlePreviewToggle","prev","handleCopyLink","url","set","navigator","clipboard","writeText","handlePopoverExportMenuOpen","event","currentTarget","handlePopoverExportMenuClose","Paper","ref","square","elevation","direction","ButtonGroup","onClick","target","LaunchRounded","DownloadRounded","SendRounded","lg","overflowY","userSelect","Popover","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","open","onClose","MenuList","MenuItem","ListItemIcon","fontSize","ListItemText","themeDark","createTheme","palette","mode","App","CssBaseline","ThemeProvider","SnackbarProvider","preventDuplicate","autoHideDuration","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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"}