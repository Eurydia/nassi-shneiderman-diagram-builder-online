{"version":3,"file":"@uiw-J5UT4H6Q.js","sources":["../../node_modules/@uiw/codemirror-extensions-basic-setup/esm/index.js","../../node_modules/@uiw/react-codemirror/esm/theme/light.js","../../node_modules/@uiw/react-codemirror/esm/useCodeMirror.js","../../node_modules/@uiw/react-codemirror/esm/utils.js","../../node_modules/@uiw/react-codemirror/esm/getDefaultExtensions.js","../../node_modules/@uiw/react-codemirror/esm/index.js"],"sourcesContent":["import { lineNumbers, highlightActiveLineGutter, highlightSpecialChars, drawSelection, dropCursor, rectangularSelection, crosshairCursor, highlightActiveLine, keymap } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nimport { history, defaultKeymap, historyKeymap } from '@codemirror/commands';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { foldGutter, indentOnInput, syntaxHighlighting, defaultHighlightStyle, bracketMatching, indentUnit, foldKeymap } from '@codemirror/language';\nimport { lintKeymap } from '@codemirror/lint';\n/**\nThis is an extension value that just pulls together a number of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of separate packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis extension does not allow customization. The idea is that,\nonce you decide you want to configure your editor more precisely,\nyou take this package's source (which is just a bunch of imports\nand an array literal), copy it into your own code, and adjust it\nas desired.\n*/\nexport var basicSetup = function basicSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var {\n    crosshairCursor: initCrosshairCursor = false\n  } = options;\n  var keymaps = [];\n  if (options.closeBracketsKeymap !== false) {\n    keymaps = keymaps.concat(closeBracketsKeymap);\n  }\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.searchKeymap !== false) {\n    keymaps = keymaps.concat(searchKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  if (options.foldKeymap !== false) {\n    keymaps = keymaps.concat(foldKeymap);\n  }\n  if (options.completionKeymap !== false) {\n    keymaps = keymaps.concat(completionKeymap);\n  }\n  if (options.lintKeymap !== false) {\n    keymaps = keymaps.concat(lintKeymap);\n  }\n  var extensions = [];\n  if (options.lineNumbers !== false) extensions.push(lineNumbers());\n  if (options.highlightActiveLineGutter !== false) extensions.push(highlightActiveLineGutter());\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.foldGutter !== false) extensions.push(foldGutter());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.dropCursor !== false) extensions.push(dropCursor());\n  if (options.allowMultipleSelections !== false) extensions.push(EditorState.allowMultipleSelections.of(true));\n  if (options.indentOnInput !== false) extensions.push(indentOnInput());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  if (options.bracketMatching !== false) extensions.push(bracketMatching());\n  if (options.closeBrackets !== false) extensions.push(closeBrackets());\n  if (options.autocompletion !== false) extensions.push(autocompletion());\n  if (options.rectangularSelection !== false) extensions.push(rectangularSelection());\n  if (initCrosshairCursor !== false) extensions.push(crosshairCursor());\n  if (options.highlightActiveLine !== false) extensions.push(highlightActiveLine());\n  if (options.highlightSelectionMatches !== false) extensions.push(highlightSelectionMatches());\n  if (options.tabSize && typeof options.tabSize === 'number') extensions.push(indentUnit.of(' '.repeat(options.tabSize)));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nexport var minimalSetup = function minimalSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var keymaps = [];\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  var extensions = [];\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};","import { EditorView } from '@codemirror/view';\nexport var defaultLightThemeOption = EditorView.theme({\n  '&': {\n    backgroundColor: '#fff'\n  }\n}, {\n  dark: false\n});","import { useEffect, useState } from 'react';\nimport { Annotation, EditorState, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { getDefaultExtensions } from './getDefaultExtensions';\nimport { getStatistics } from './utils';\nvar External = Annotation.define();\nvar emptyExtensions = [];\nexport function useCodeMirror(props) {\n  var {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = emptyExtensions,\n    autoFocus,\n    theme = 'light',\n    height = null,\n    minHeight = null,\n    maxHeight = null,\n    width = null,\n    minWidth = null,\n    maxWidth = null,\n    placeholder: placeholderStr = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState\n  } = props;\n  var [container, setContainer] = useState();\n  var [view, setView] = useState();\n  var [state, setState] = useState();\n  var defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth\n    },\n    '& .cm-scroller': {\n      height: '100% !important'\n    }\n  });\n  var updateListener = EditorView.updateListener.of(vu => {\n    if (vu.docChanged && typeof onChange === 'function' &&\n    // Fix echoing of the remote changes:\n    // If transaction is market as remote we don't have to call `onChange` handler again\n    !vu.transactions.some(tr => tr.annotation(External))) {\n      var doc = vu.state.doc;\n      var _value = doc.toString();\n      onChange(_value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n  var defaultExtensions = getDefaultExtensions({\n    theme,\n    editable,\n    readOnly,\n    placeholder: placeholderStr,\n    indentWithTab: defaultIndentWithTab,\n    basicSetup: defaultBasicSetup\n  });\n  var getExtensions = [updateListener, defaultThemeOption, ...defaultExtensions];\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n  useEffect(() => {\n    if (container && !state) {\n      var config = {\n        doc: value,\n        selection,\n        extensions: getExtensions\n      };\n      var stateCurrent = initialState ? EditorState.fromJSON(initialState.json, config, initialState.fields) : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        var viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n  useEffect(() => setContainer(props.container), [props.container]);\n  useEffect(() => () => {\n    if (view) {\n      view.destroy();\n      setView(undefined);\n    }\n  }, [view]);\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n  useEffect(() => {\n    if (view) {\n      view.dispatch({\n        effects: StateEffect.reconfigure.of(getExtensions)\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, extensions, height, minHeight, maxHeight, width, minWidth, maxWidth, placeholderStr, editable, readOnly, defaultIndentWithTab, defaultBasicSetup, onChange, onUpdate]);\n  useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n    var currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: currentValue.length,\n          insert: value || ''\n        },\n        annotations: [External.of(true)]\n      });\n    }\n  }, [value, view]);\n  return {\n    state,\n    setState,\n    view,\n    setView,\n    container,\n    setContainer\n  };\n}","export var getStatistics = view => {\n  return {\n    line: view.state.doc.lineAt(view.state.selection.main.from),\n    lineCount: view.state.doc.lines,\n    lineBreak: view.state.lineBreak,\n    length: view.state.doc.length,\n    readOnly: view.state.readOnly,\n    tabSize: view.state.tabSize,\n    selection: view.state.selection,\n    selectionAsSingle: view.state.selection.asSingle().main,\n    ranges: view.state.selection.ranges,\n    selectionCode: view.state.sliceDoc(view.state.selection.main.from, view.state.selection.main.to),\n    selections: view.state.selection.ranges.map(r => view.state.sliceDoc(r.from, r.to)),\n    selectedText: view.state.selection.ranges.some(r => !r.empty)\n  };\n};","import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nimport { defaultLightThemeOption } from './theme/light';\nexport * from '@codemirror/theme-one-dark';\nexport * from './theme/light';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className,\n      value = '',\n      selection,\n      extensions = [],\n      onChange,\n      onStatistics,\n      onCreateEditor,\n      onUpdate,\n      autoFocus,\n      theme = 'light',\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n      basicSetup,\n      placeholder,\n      indentWithTab,\n      editable,\n      readOnly,\n      root,\n      initialState\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container\n  } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;"],"names":["basicSetup","options","crosshairCursor","initCrosshairCursor","keymaps","closeBracketsKeymap","concat","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","extensions","lineNumbers","push","highlightActiveLineGutter","highlightSpecialChars","history","foldGutter","drawSelection","dropCursor","allowMultipleSelections","EditorState","of","indentOnInput","syntaxHighlighting","defaultHighlightStyle","fallback","bracketMatching","closeBrackets","autocompletion","rectangularSelection","highlightActiveLine","highlightSelectionMatches","tabSize","indentUnit","repeat","keymap","flat","filter","Boolean","defaultLightThemeOption","EditorView","theme","backgroundColor","dark","External","Annotation","define","emptyExtensions","useCodeMirror","props","value","selection","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","height","minHeight","maxHeight","width","minWidth","maxWidth","placeholder","placeholderStr","editable","readOnly","indentWithTab","defaultIndentWithTab","defaultBasicSetup","root","initialState","container","setContainer","useState","view","setView","state","setState","defaultThemeOption","updateListener","vu","docChanged","transactions","some","tr","annotation","_value","doc","toString","line","lineAt","main","from","lineCount","lines","lineBreak","length","selectionAsSingle","asSingle","ranges","selectionCode","sliceDoc","to","selections","map","r","selectedText","empty","getStatistics","defaultExtensions","optios","getExtensions","unshift","oneDark","getDefaultExtensions","useEffect","config","stateCurrent","fromJSON","json","fields","create","viewCurrent","parent","destroy","focus","dispatch","effects","StateEffect","reconfigure","currentValue","changes","insert","annotations","_excluded","ReactCodeMirror","forwardRef","ref","className","other","_objectWithoutPropertiesLoose","editor","useRef","current","reactExports","useImperativeHandle","Error","defaultClassNames","_jsx","jsx","_extends","displayName"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}