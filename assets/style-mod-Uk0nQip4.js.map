{"version":3,"file":"style-mod-Uk0nQip4.js","sources":["../../node_modules/style-mod/src/style-mod.js"],"sourcesContent":["const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(root, modules, options) {\n    let set = root[SET], nonce = options && options.nonce\n    if (!set) set = new StyleSet(root, nonce)\n    else if (nonce) set.setNonce(nonce)\n    set.mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root, nonce) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) {\n        root.adoptedStyleSheets = [adopted.sheet, ...root.adoptedStyleSheets]\n        return root[SET] = adopted\n      }\n      this.sheet = new win.CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      if (nonce) this.styleTag.setAttribute(\"nonce\", nonce)\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n\n  setNonce(nonce) {\n    if (this.styleTag && this.styleTag.getAttribute(\"nonce\") != nonce)\n      this.styleTag.setAttribute(\"nonce\", nonce)\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n"],"names":["COUNT","Symbol","for","SET","Math","floor","random","top","globalThis","window","StyleModule","constructor","spec","options","this","rules","finish","splitSelector","selector","test","split","render","selectors","target","isKeyframes","local","isAt","exec","keyframes","push","prop","value","map","part","sel","replace","reduce","a","b","concat","RangeError","l","toLowerCase","length","join","getRules","newName","id","toString","mount","root","modules","set","nonce","setNonce","StyleSet","Array","isArray","adoptedSet","Map","doc","ownerDocument","win","defaultView","head","adoptedStyleSheets","CSSStyleSheet","adopted","get","sheet","styleTag","createElement","setAttribute","insertBefore","firstChild","pos","j","i","mod","index","indexOf","splice","k","insertRule","text","textContent","getAttribute"],"mappings":"AAAA,MACMA,EAAyB,oBAAVC,OAAwB,MAAWA,OAAOC,IADrD,KAEJC,EAAuB,oBAAVF,OAAwB,aAAeG,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkBL,OAAO,YAC7FM,EAA2B,oBAAdC,WAA4BA,WAA8B,oBAAVC,OAAwBA,OAAS,CAAE,EAW/F,MAAMC,EAMX,WAAAC,CAAYC,EAAMC,GAChBC,KAAKC,MAAQ,GACb,IAAIC,OAACA,GAAUH,GAAW,CAAE,EAE5B,SAASI,EAAcC,GACd,MAAA,KAAKC,KAAKD,GAAY,CAACA,GAAYA,EAASE,MAAM,OAC1D,CAED,SAASC,EAAOC,EAAWV,EAAMW,EAAQC,GACvC,IAAIC,EAAQ,GAAIC,EAAO,YAAYC,KAAKL,EAAU,IAAKM,EAAYF,GAAmB,aAAXA,EAAK,GAChF,GAAIA,GAAgB,MAARd,EAAc,OAAOW,EAAOM,KAAKP,EAAU,GAAK,KAC5D,IAAA,IAASQ,KAAQlB,EAAM,CACjB,IAAAmB,EAAQnB,EAAKkB,GACb,GAAA,IAAIX,KAAKW,GACXT,EAAOS,EAAKV,MAAM,QAAQY,KAAYC,GAAAX,EAAUU,KAAIE,GAAOD,EAAKE,QAAQ,IAAKD,OAAOE,QAAO,CAACC,EAAGC,IAAMD,EAAEE,OAAOD,KACvGP,EAAOR,QACL,GAAAQ,GAAyB,iBAATA,EAAmB,CAC5C,IAAKL,EAAM,MAAM,IAAIc,WAAW,4BAA8BV,EAAO,kCACrET,EAAOJ,EAAca,GAAOC,EAAON,EAAOG,EACpD,MAA4B,MAATG,GACTN,EAAMI,KAAKC,EAAKK,QAAQ,MAAO,IAAIA,QAAQ,UAAeM,GAAA,IAAMA,EAAEC,gBAAiB,KAAOX,EAAQ,IAErG,EACGN,EAAMkB,QAAUf,IAClBL,EAAOM,OAAMb,GAAWU,GAASF,EAAsCF,EAAxBA,EAAUU,IAAIhB,IAAqB4B,KAAK,MAC3E,KAAOnB,EAAMmB,KAAK,KAAO,IAExC,CAED,IAAA,IAASd,KAAQlB,EAAMS,EAAOJ,EAAca,GAAOlB,EAAKkB,GAAOhB,KAAKC,MACrE,CAID,QAAA8B,GAAoB,OAAA/B,KAAKC,MAAM6B,KAAK,KAAO,CAI3C,cAAOE,GACD,IAAAC,EAAKxC,EAAIP,IAAU,EAEhB,OADHO,EAAAP,GAAS+C,EAAK,EA5DZ,IA6DKA,EAAGC,SAAS,GACxB,CAkBD,YAAOC,CAAMC,EAAMC,EAAStC,GAC1B,IAAIuC,EAAMF,EAAK/C,GAAMkD,EAAQxC,GAAWA,EAAQwC,MAC3CD,EACIC,GAAOD,EAAIE,SAASD,GADbD,EAAA,IAAIG,EAASL,EAAMG,GAE/BD,EAAAH,MAAMO,MAAMC,QAAQN,GAAWA,EAAU,CAACA,GAC/C,EAGH,IAAIO,EAAiB,IAAAC,IAErB,MAAMJ,EACJ,WAAA5C,CAAYuC,EAAMG,GAChB,IAAIO,EAAMV,EAAKW,eAAiBX,EAAMY,EAAMF,EAAIG,YAChD,IAAKb,EAAKc,MAAQd,EAAKe,oBAAsBH,EAAII,cAAe,CAC1D,IAAAC,EAAUT,EAAWU,IAAIR,GAC7B,GAAIO,EAEK,OADPjB,EAAKe,mBAAqB,CAACE,EAAQE,SAAUnB,EAAKe,oBAC3Cf,EAAK/C,GAAOgE,EAEhBrD,KAAAuD,MAAQ,IAAIP,EAAII,cACrBhB,EAAKe,mBAAqB,CAACnD,KAAKuD,SAAUnB,EAAKe,oBACpCP,EAAAN,IAAIQ,EAAK9C,KAC1B,KAAW,CACAA,KAAAwD,SAAWV,EAAIW,cAAc,SAC9BlB,GAAYvC,KAAAwD,SAASE,aAAa,QAASnB,GAC3C,IAAA9B,EAAS2B,EAAKc,MAAQd,EAC1B3B,EAAOkD,aAAa3D,KAAKwD,SAAU/C,EAAOmD,WAC3C,CACD5D,KAAKqC,QAAU,GACfD,EAAK/C,GAAOW,IACb,CAED,KAAAmC,CAAME,GACJ,IAAIkB,EAAQvD,KAAKuD,MACbM,EAAM,EAA6BC,EAAI,EAC3C,IAAA,IAASC,EAAI,EAAGA,EAAI1B,EAAQR,OAAQkC,IAAK,CACnC,IAAAC,EAAM3B,EAAQ0B,GAAIE,EAAQjE,KAAKqC,QAAQ6B,QAAQF,GAMnD,GALIC,EAAQH,GAAKG,GAAY,IACtBjE,KAAAqC,QAAQ8B,OAAOF,EAAO,GAC3BH,IACQG,GAAA,IAEO,GAAbA,GAEE,GADJjE,KAAKqC,QAAQ8B,OAAOL,IAAK,EAAGE,GACxBT,EAAO,IAAA,IAASa,EAAI,EAAGA,EAAIJ,EAAI/D,MAAM4B,OAAQuC,IAC/Cb,EAAMc,WAAWL,EAAI/D,MAAMmE,GAAIP,SAC5B,CACL,KAAOC,EAAIG,GAAOJ,GAAO7D,KAAKqC,QAAQyB,KAAK7D,MAAM4B,OACjDgC,GAAOG,EAAI/D,MAAM4B,OACjBiC,GACD,CACF,CAED,IAAKP,EAAO,CACV,IAAIe,EAAO,GACX,IAAA,IAASP,EAAI,EAAGA,EAAI/D,KAAKqC,QAAQR,OAAQkC,IACvCO,GAAQtE,KAAKqC,QAAQ0B,GAAGhC,WAAa,KACvC/B,KAAKwD,SAASe,YAAcD,CAC7B,CACF,CAED,QAAA9B,CAASD,GACHvC,KAAKwD,UAAYxD,KAAKwD,SAASgB,aAAa,UAAYjC,GACrDvC,KAAAwD,SAASE,aAAa,QAASnB,EACvC","x_google_ignoreList":[0]}