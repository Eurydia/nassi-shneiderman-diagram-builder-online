{"version":3,"file":"index-jqQpcVJC.js","sources":["../../src/interpreter/lexer.ts","../../src/interpreter/parser.ts","../../src/renderer/ArrowTopLeftBottomRight.tsx","../../src/renderer/ArrowBottomLeftTopRight.tsx","../../src/renderer/StructogramNode.tsx","../../src/renderer/renderer.tsx","../../src/App/components/StructogramCodeEditor/StructogramCodeEditor.tsx","../../src/App/components/AdaptiveButton.tsx","../../src/App/components/LiveEditor/LiveEditor.tsx","../../src/App/components/LiveEditor/useExportDiagram.ts","../../src/App/components/LiveEditor/useEditorContent.ts","../../src/App/components/LiveEditor/helperGenerateUniqueLink.ts","../../src/App/App.tsx","../../src/main.tsx"],"sourcesContent":["export enum TokenKind {\r\n\tEND = 0,\r\n\tSYMBOL,\r\n\tKEYWORD,\r\n\r\n\tLEFT_PAREN,\r\n\tRIGHT_PAREN,\r\n\tLEFT_CURLY,\r\n\tRIGHT_CURLY,\r\n\tSEMICOLON,\r\n\tWHITE_SPACE,\r\n}\r\n\r\nexport type Token = {\r\n\tkind: TokenKind;\r\n\ttext: string;\r\n\trowPos: number;\r\n\tcolPos: number;\r\n};\r\n\r\nconst KEYWORDS: string[] = [\r\n\t\"for\",\r\n\t\"if\",\r\n\t\"else\",\r\n\t\"while\",\r\n\t\"do\",\r\n];\r\n\r\nconst LITERAL_TOKENS: Record<string, TokenKind> =\r\n\t{\r\n\t\t\"{\": TokenKind.LEFT_CURLY,\r\n\t\t\"}\": TokenKind.RIGHT_CURLY,\r\n\t\t\"(\": TokenKind.LEFT_PAREN,\r\n\t\t\")\": TokenKind.RIGHT_PAREN,\r\n\t\t\";\": TokenKind.SEMICOLON,\r\n\t};\r\n\r\nexport type Lexer = {\r\n\tcontent: string;\r\n\tcontentLength: number;\r\n\tcursorPos: number;\r\n\r\n\tcursorRow: number;\r\n\tcursorCol: number;\r\n};\r\n\r\nconst removeComments = (\r\n\tcontent: string,\r\n): string => {\r\n\tlet cleanContent = \"\";\r\n\r\n\tlet contentPos = 0;\r\n\twhile (contentPos < content.length) {\r\n\t\tif (\r\n\t\t\tcontentPos + 1 < content.length &&\r\n\t\t\tcontent[contentPos] === \"/\" &&\r\n\t\t\tcontent[contentPos + 1] === \"/\"\r\n\t\t) {\r\n\t\t\twhile (\r\n\t\t\t\tcontentPos < content.length &&\r\n\t\t\t\tcontent[contentPos] !== \"\\n\"\r\n\t\t\t) {\r\n\t\t\t\tcontentPos++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcleanContent += content[contentPos];\r\n\t\tcontentPos++;\r\n\t}\r\n\r\n\treturn cleanContent;\r\n};\r\n\r\nexport const lexerInit = (\r\n\tcontent: string,\r\n): Lexer => {\r\n\tconst cleanedContent = removeComments(\r\n\t\tcontent.normalize(),\r\n\t);\r\n\r\n\treturn {\r\n\t\tcontent: cleanedContent,\r\n\t\tcontentLength: cleanedContent.length,\r\n\t\tcursorPos: 0,\r\n\t\tcursorCol: 1,\r\n\t\tcursorRow: 1,\r\n\t};\r\n};\r\n\r\nexport const lexerGetNextTokenThenAdvance = (\r\n\tl: Lexer,\r\n): Token => {\r\n\tconst token: Token = {\r\n\t\tkind: TokenKind.END,\r\n\t\ttext: \"\",\r\n\t\trowPos: l.cursorRow,\r\n\t\tcolPos: l.cursorCol,\r\n\t};\r\n\r\n\tif (l.cursorPos >= l.contentLength) {\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken[\"text\"] = l.content[l.cursorPos];\r\n\tl.cursorPos++;\r\n\tl.cursorCol++;\r\n\r\n\tif (/\\s/.test(token.text)) {\r\n\t\ttoken.kind = TokenKind.WHITE_SPACE;\r\n\t\tif (token.text === \"\\n\") {\r\n\t\t\tl.cursorRow++;\r\n\t\t\tl.cursorCol = 1;\r\n\t\t}\r\n\t\treturn token;\r\n\t}\r\n\r\n\tif (token[\"text\"] in LITERAL_TOKENS) {\r\n\t\ttoken[\"kind\"] = LITERAL_TOKENS[token[\"text\"]];\r\n\t\treturn token;\r\n\t}\r\n\r\n\twhile (\r\n\t\tl[\"cursorPos\"] < l.contentLength &&\r\n\t\t!(l.content[l.cursorPos] in LITERAL_TOKENS) &&\r\n\t\t!/\\s/.test(l.content[l.cursorPos])\r\n\t) {\r\n\t\ttoken[\"text\"] += l.content[l.cursorPos];\r\n\t\tl.cursorPos++;\r\n\t\tl.cursorCol++;\r\n\t}\r\n\r\n\tif (KEYWORDS.includes(token.text)) {\r\n\t\ttoken.kind = TokenKind.KEYWORD;\r\n\t\treturn token;\r\n\t}\r\n\r\n\ttoken.kind = TokenKind.SYMBOL;\r\n\treturn token;\r\n};\r\n\r\nexport const lexerGetAllTokens = (\r\n\tl: Lexer,\r\n): Token[] => {\r\n\tconst tokens: Token[] = [];\r\n\tlet token: Token;\r\n\twhile (\r\n\t\t(token = lexerGetNextTokenThenAdvance(l))\r\n\t\t\t.kind !== TokenKind.END\r\n\t) {\r\n\t\ttokens.push(token);\r\n\t}\r\n\treturn tokens;\r\n};\r\n","import { Token, TokenKind } from \"./lexer\";\r\n\r\nexport enum NodeKind {\r\n\tEOF = 0,\r\n\tERROR,\r\n\tPROCESS,\r\n\tLOOP_FIRST,\r\n\tLOOP_LAST,\r\n\tIF_ELSE,\r\n\tFUNC,\r\n}\r\n\r\ntype NodeEOF = {\r\n\tkind: NodeKind.EOF;\r\n};\r\n\r\ntype NodeError = {\r\n\tkind: NodeKind.ERROR;\r\n\trowPos: number;\r\n\tcolPos: number;\r\n\tcontext: string;\r\n\treason: string;\r\n};\r\n\r\ntype NodeProcess = {\r\n\tkind: NodeKind.PROCESS;\r\n\tbody: Token[];\r\n};\r\n\r\ntype NodeLoopFirst = {\r\n\tkind: NodeKind.LOOP_FIRST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeLoopLast = {\r\n\tkind: NodeKind.LOOP_LAST;\r\n\tcondition: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\ntype NodeIfElse = {\r\n\tkind: NodeKind.IF_ELSE;\r\n\tcondition: Token[];\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n};\r\n\r\ntype NodeFunc = {\r\n\tkind: NodeKind.FUNC;\r\n\tdecl: Token[];\r\n\tbody: Node[];\r\n};\r\n\r\nexport type Node =\r\n\t| NodeEOF\r\n\t| NodeProcess\r\n\t| NodeLoopFirst\r\n\t| NodeLoopLast\r\n\t| NodeIfElse\r\n\t| NodeFunc\r\n\t| NodeEOF\r\n\t| NodeError;\r\n\r\nexport type Parser = {\r\n\ttokens: Token[];\r\n\ttokenLength: number;\r\n\tcursorPos: number;\r\n};\r\n\r\nexport const parserInit = (\r\n\ttokens: Token[],\r\n): Parser => {\r\n\treturn {\r\n\t\ttokens: tokens,\r\n\t\ttokenLength: tokens.length,\r\n\t\tcursorPos: 0,\r\n\t};\r\n};\r\n\r\nconst parserCollectTokensBetween = (\r\n\tp: Parser,\r\n\tstartToken: TokenKind,\r\n\tstopToken: TokenKind,\r\n): Token[] => {\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn [];\r\n\t}\r\n\tif (p.tokens[p.cursorPos].kind !== startToken) {\r\n\t\treturn [];\r\n\t}\r\n\t// Consume the start token\r\n\tp.cursorPos++;\r\n\r\n\t// Does not include the start but includes the stop token\r\n\tconst tokens: Token[] = [];\r\n\r\n\tlet depth = -1;\r\n\tlet token: Token;\r\n\twhile (p.cursorPos < p.tokenLength) {\r\n\t\ttoken = p.tokens[p.cursorPos];\r\n\t\tp.cursorPos++;\r\n\t\tif (token.kind === startToken) {\r\n\t\t\tdepth--;\r\n\t\t}\r\n\t\tif (token.kind === stopToken) {\r\n\t\t\tdepth++;\r\n\t\t}\r\n\t\ttokens.push(token);\r\n\r\n\t\tif (depth === 0) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// The cursor is pointing the token immediately after\r\n\t// the stop token\r\n\treturn tokens;\r\n};\r\n\r\nconst parserSkipWhiteSpace = (\r\n\tp: Parser,\r\n): void => {\r\n\twhile (\r\n\t\tp.cursorPos < p.tokenLength &&\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\t\tTokenKind.WHITE_SPACE\r\n\t) {\r\n\t\tp.cursorPos++;\r\n\t}\r\n};\r\n\r\nconst parserBuildLoopFirstNode = (\r\n\tp: Parser,\r\n): NodeLoopFirst | NodeError => {\r\n\tconst node: NodeLoopFirst = {\r\n\t\tkind: NodeKind.LOOP_FIRST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\t// Set \"for\" token as marker\r\n\tlet markerToken: Token =\r\n\t\tp.tokens[p.cursorPos - 1];\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"(\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-first loop declaration. Missing a \"(\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"(\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-first loop declaration. Expected a \"(\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"(\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tnode.condition = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\t// If the condition has at least one element,\r\n\t// set the last token token as marker\r\n\t// Otherwise, keep  \"(\" token as marker\r\n\tif (node.condition.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tnode.condition[node.condition.length - 1];\r\n\t}\r\n\t// If the condition is empty, the \")\" token is missing\r\n\t// Or the condition is not empty but \")\" is not found\r\n\tif (\r\n\t\tnode.condition.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_PAREN\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-first loop declaration. Missing a \")\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \")\" token from condition\r\n\tnode.condition.pop();\r\n\t// By this point, \")\" token is the marker\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"{\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-first loop declaration. Missing a \"{\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"{\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-first loop declaration. Expected a \"{\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"{\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tconst bodyTokens = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_CURLY,\r\n\t\tTokenKind.RIGHT_CURLY,\r\n\t);\r\n\r\n\t// If body has at least one token,\r\n\t// set the last token as marker .\r\n\t// If body has no token, keep \"{\" as marker\r\n\tif (bodyTokens.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tbodyTokens[bodyTokens.length - 1];\r\n\t}\r\n\t// If the body has no token, the declaration is incomplete\r\n\t// Or the body has tokens, but \"}\" is not found\r\n\tif (\r\n\t\tbodyTokens.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_CURLY\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-first loop declaration. Missing a \"}\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \"}\" token from body\r\n\tbodyTokens.pop();\r\n\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(bodyTokens),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildLoopLastNode = (\r\n\tp: Parser,\r\n): NodeLoopLast | NodeError => {\r\n\tconst node: NodeLoopLast = {\r\n\t\tkind: NodeKind.LOOP_LAST,\r\n\t\tbody: [],\r\n\t\tcondition: [],\r\n\t};\r\n\r\n\t// Set \"do\" token as marker\r\n\tlet markerToken = p.tokens[p.cursorPos - 1];\r\n\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"{\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing a \"{\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"{\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-last loop declaration. Expected a \"{\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"{\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tconst bodyTokens = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_CURLY,\r\n\t\tTokenKind.RIGHT_CURLY,\r\n\t);\r\n\r\n\t// If body has at least one token,\r\n\t// set the last token as marker and consume it.\r\n\t// If body has no token, keep \"{\" as marker\r\n\tif (bodyTokens.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tbodyTokens[bodyTokens.length - 1];\r\n\t}\r\n\t// If the body has no token, the declaration is incomplete\r\n\t// Or the body has tokens, but \"}\" is not found\r\n\tif (\r\n\t\tbodyTokens.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_CURLY\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing \"}\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume the \"}\" token in body\r\n\tbodyTokens.pop();\r\n\t// By this point, the marker is \"}\" token\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"while\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing a \"while\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found after \"}\" is not a \"while\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"while\"\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-last loop declaration. Expected a \"while\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"while\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\t// Consume \"while token\"\r\n\tp.cursorPos++;\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"(\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing a \"(\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"(\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-last loop declaration. Expected a \"(\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"(\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tnode.condition = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\t// If the condition has at least one element,\r\n\t// set the last token token as marker\r\n\t// Otherwise, keep  \"(\" token as marker\r\n\tif (node.condition.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tnode.condition[node.condition.length - 1];\r\n\t}\r\n\t// If the condition is empty, the \")\" token is missing\r\n\t// Or the condition is not empty but \")\" is not found\r\n\tif (\r\n\t\tnode.condition.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_PAREN\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing a \")\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \")\" token from condition\r\n\tnode.condition.pop();\r\n\t// At this point, \")\" is the marker\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \";\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete test-last loop declaration. Missing a \";\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found after \")\" is not a \";\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.SEMICOLON\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in test-last loop declaration. Expected a \";\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume semicolon token\r\n\tp.cursorPos++;\r\n\r\n\t// Only build the body nodes if the parent declaration is correct\r\n\tnode.body = parserGetAllNodes(\r\n\t\tparserInit(bodyTokens),\r\n\t);\r\n\treturn node;\r\n};\r\n\r\nconst parserBuildIfElseNode = (\r\n\tp: Parser,\r\n): NodeIfElse | NodeError => {\r\n\tconst node: NodeIfElse = {\r\n\t\tkind: NodeKind.IF_ELSE,\r\n\t\tcondition: [],\r\n\t\tbodyIf: [],\r\n\t\tbodyElse: [],\r\n\t};\r\n\r\n\t// Set \"for\" token as marker\r\n\tlet markerToken: Token =\r\n\t\tp.tokens[p.cursorPos - 1];\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"(\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if) declaration. Missing a \"(\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"(\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_PAREN\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in branching block (if) declaration. Expected a \"(\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"(\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\tnode.condition = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_PAREN,\r\n\t\tTokenKind.RIGHT_PAREN,\r\n\t);\r\n\t// If the condition has at least one element,\r\n\t// set the last token token as marker\r\n\t// Otherwise, keep  \"(\" token as marker\r\n\tif (node.condition.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tnode.condition[node.condition.length - 1];\r\n\t}\r\n\t// If the condition is empty, the \")\" token is missing\r\n\t// Or the condition is not empty but \")\" is not found\r\n\tif (\r\n\t\tnode.condition.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_PAREN\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if) declaration. Missing a \")\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \")\" token from condition\r\n\tnode.condition.pop();\r\n\t// By this point, \")\" token is the marker\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"{\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if) declaration. Missing a \"{\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"{\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in branching block (if) declaration. Expected a \"{\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"{\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tconst bodyIfTokens = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_CURLY,\r\n\t\tTokenKind.RIGHT_CURLY,\r\n\t);\r\n\t// If body has at least one token,\r\n\t// set the last token as marker .\r\n\t// If body has no token, keep \"{\" as marker\r\n\tif (bodyIfTokens.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tbodyIfTokens[bodyIfTokens.length - 1];\r\n\t}\r\n\t// If the body has no token, the declaration is incomplete\r\n\t// Or the body has tokens, but \"}\" is not found\r\n\tif (\r\n\t\tbodyIfTokens.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_CURLY\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if) declaration. Missing a \"}\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \"}\" token from body\r\n\tbodyIfTokens.pop();\r\n\t// Only parse the body after the declaration is valid\r\n\t// the body of if branch has to be parsed here\r\n\t// before possible return\r\n\tnode.bodyIf = parserGetAllNodes(\r\n\t\tparserInit(bodyIfTokens),\r\n\t);\r\n\tparserSkipWhiteSpace(p);\r\n\t// The branching block is complete\r\n\t// No need for error at this point\r\n\tif (\r\n\t\tp.cursorPos >= p.tokenLength ||\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.KEYWORD ||\r\n\t\tp.tokens[p.cursorPos].text !== \"else\"\r\n\t) {\r\n\t\treturn node;\r\n\t}\r\n\t// The cursor is pointing at \"else\" token\r\n\t// Set \"else\" as marker and consume it\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\tp.cursorPos++;\r\n\t// By this point, \"else\" is the marker\r\n\tparserSkipWhiteSpace(p);\r\n\t// If the cursor is out of bound, \"{\" token is missing\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if-else) declaration. Missing a \"{\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// The first non-whitespace found is not a \"{\" token\r\n\t// but something else\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tconst unexpectedToken = p.tokens[p.cursorPos];\r\n\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Unexpected token found in branching block (if-else) declaration. Expected a \"{\" token but found \"${unexpectedToken.text}\" instead.`,\r\n\t\t\tcontext: `${markerToken.text} ${unexpectedToken.text}`,\r\n\t\t\trowPos: unexpectedToken.rowPos,\r\n\t\t\tcolPos: unexpectedToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Set \"{\" token as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tconst bodyElseTokens =\r\n\t\tparserCollectTokensBetween(\r\n\t\t\tp,\r\n\t\t\tTokenKind.LEFT_CURLY,\r\n\t\t\tTokenKind.RIGHT_CURLY,\r\n\t\t);\r\n\t// If body has at least one token,\r\n\t// set the last token as marker .\r\n\t// If body has no token, keep \"{\" as marker\r\n\tif (bodyElseTokens.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tbodyElseTokens[bodyElseTokens.length - 1];\r\n\t}\r\n\t// If the body has no token, the declaration is incomplete\r\n\t// Or the body has tokens, but \"}\" is not found\r\n\tif (\r\n\t\tbodyElseTokens.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_CURLY\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete branching block (if-else) declaration. Missing a \"}\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume \"}\" token from body\r\n\tbodyElseTokens.pop();\r\n\r\n\tnode.bodyElse = parserGetAllNodes(\r\n\t\tparserInit(bodyElseTokens),\r\n\t);\r\n\r\n\treturn node;\r\n};\r\n\r\nconst parserGetNextNodeThenAdvance = (\r\n\tp: Parser,\r\n): Node => {\r\n\tparserSkipWhiteSpace(p);\r\n\tif (p.cursorPos >= p.tokenLength) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.EOF,\r\n\t\t};\r\n\t}\r\n\tconst token = p.tokens[p.cursorPos];\r\n\tp.cursorPos++;\r\n\tif (token.kind === TokenKind.KEYWORD) {\r\n\t\tswitch (token.text) {\r\n\t\t\tcase \"for\":\r\n\t\t\tcase \"while\":\r\n\t\t\t\treturn parserBuildLoopFirstNode(p);\r\n\t\t\tcase \"do\":\r\n\t\t\t\treturn parserBuildLoopLastNode(p);\r\n\t\t\tcase \"if\":\r\n\t\t\t\treturn parserBuildIfElseNode(p);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconst tokens: Token[] = [token];\r\n\tlet markerToken = token;\r\n\r\n\t// Consume tokens until \";\" or \"{\" token is found\r\n\twhile (\r\n\t\tp.cursorPos < p.tokenLength &&\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.SEMICOLON &&\r\n\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.LEFT_CURLY\r\n\t) {\r\n\t\tmarkerToken = p.tokens[p.cursorPos];\r\n\t\ttokens.push(p.tokens[p.cursorPos]);\r\n\t\tp.cursorPos++;\r\n\t}\r\n\r\n\t// Neither \";\" or \"{\" token is found\r\n\t// The loop terminates becaues EOF\r\n\t// Also assumed that the use ris trying to write a process\r\n\t// instead of a function\r\n\tif (\r\n\t\tp.cursorPos >= p.tokenLength ||\r\n\t\t(p.tokens[p.cursorPos].kind !==\r\n\t\t\tTokenKind.LEFT_CURLY &&\r\n\t\t\tp.tokens[p.cursorPos].kind !==\r\n\t\t\t\tTokenKind.SEMICOLON)\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t\treason: `Incomplete process declaration. Missing a \";\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t};\r\n\t}\r\n\r\n\tif (\r\n\t\tp.tokens[p.cursorPos].kind ===\r\n\t\tTokenKind.SEMICOLON\r\n\t) {\r\n\t\tp.cursorPos++;\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.PROCESS,\r\n\t\t\tbody: tokens,\r\n\t\t};\r\n\t}\r\n\r\n\t// It is confirmed that the loop stopped\r\n\t// because it encountered a \"{\" token\r\n\t// Set it as marker\r\n\tmarkerToken = p.tokens[p.cursorPos];\r\n\r\n\tconst bodyTokens = parserCollectTokensBetween(\r\n\t\tp,\r\n\t\tTokenKind.LEFT_CURLY,\r\n\t\tTokenKind.RIGHT_CURLY,\r\n\t);\r\n\r\n\t// If the condition has at least one element,\r\n\t// set the last token token as marker\r\n\t// Otherwise, keep  \"{\" token as marker\r\n\tif (bodyTokens.length > 0) {\r\n\t\tmarkerToken =\r\n\t\t\tbodyTokens[bodyTokens.length - 1];\r\n\t}\r\n\t// If the condition is empty, the \"}\" token is missing\r\n\t// Or the condition is not empty but \"}\" is not found\r\n\tif (\r\n\t\tbodyTokens.length === 0 ||\r\n\t\tmarkerToken.kind !== TokenKind.RIGHT_CURLY\r\n\t) {\r\n\t\treturn {\r\n\t\t\tkind: NodeKind.ERROR,\r\n\t\t\treason: `Incomplete function declaration. Missing a \"}\" token.`,\r\n\t\t\tcontext: markerToken.text,\r\n\t\t\trowPos: markerToken.rowPos,\r\n\t\t\tcolPos: markerToken.colPos,\r\n\t\t};\r\n\t}\r\n\t// Consume the \"}\" token from body\r\n\tbodyTokens.pop();\r\n\r\n\treturn {\r\n\t\tkind: NodeKind.FUNC,\r\n\t\tdecl: tokens,\r\n\t\tbody: parserGetAllNodes(\r\n\t\t\tparserInit(bodyTokens),\r\n\t\t),\r\n\t};\r\n};\r\n\r\nexport const parserGetAllNodes = (\r\n\tp: Parser,\r\n): Node[] => {\r\n\tconst nodes: Node[] = [];\r\n\tlet node: Node;\r\n\twhile (\r\n\t\t(node = parserGetNextNodeThenAdvance(p))\r\n\t\t\t.kind !== NodeKind.EOF\r\n\t) {\r\n\t\tnodes.push(node);\r\n\t\tif (node.kind === NodeKind.ERROR) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn nodes;\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowTopLeftBottomRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"5\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tSvgIconProps,\r\n\tSvgIcon,\r\n} from \"@mui/material\";\r\n\r\nexport const ArrowBottomLeftTopRight: FC<\r\n\tSvgIconProps\r\n> = (props) => {\r\n\tconst { sx } = props;\r\n\r\n\treturn (\r\n\t\t<SvgIcon\r\n\t\t\tsx={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\t...sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tpreserveAspectRatio=\"none\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tviewBox=\"0 0 5 5\"\r\n\t\t\t\tstrokeWidth=\"0.1\"\r\n\t\t\t>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"0\"\r\n\t\t\t\t\ty1=\"5\"\r\n\t\t\t\t\tx2=\"5\"\r\n\t\t\t\t\ty2=\"0\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</SvgIcon>\r\n\t);\r\n};\r\n","import { FC, Fragment, ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tTypographyProps,\r\n\tTypography,\r\n\tStack,\r\n} from \"@mui/material\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nimport { ArrowTopLeftBottomRight } from \"./ArrowTopLeftBottomRight\";\r\nimport { ArrowBottomLeftTopRight } from \"./ArrowBottomLeftTopRight\";\r\nimport { Node, NodeKind } from \"interpreter\";\r\n\r\ntype DiagramWrapperProps = {\r\n\tchildren: ReactNode | ReactNode[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst DiagramWrapper: FC<DiagramWrapperProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\tchildren,\r\n\t\tborderTop,\r\n\t\tborderBottom,\r\n\t\tborderLeft,\r\n\t\tborderRight,\r\n\t} = props;\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\tborderStyle: \"solid\",\r\n\t\t\t\tborderLeftWidth: borderLeft ? 2 : 0,\r\n\t\t\t\tborderTopWidth: borderTop ? 2 : 0,\r\n\t\t\t\tborderBottomWidth: borderBottom ? 2 : 0,\r\n\t\t\t\tborderRightWidth: borderRight ? 2 : 0,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\ntype DiagramComponentTextProps =\r\n\tTypographyProps & {\r\n\t\tchildren?: string;\r\n\t};\r\nconst DiagramComponentText: FC<\r\n\tDiagramComponentTextProps\r\n> = (props) => {\r\n\tconst { children, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tpadding={1.5}\r\n\t\t\t{...rest}\r\n\t\t\tsx={{\r\n\t\t\t\tfontFamily: \"Fira Code\",\r\n\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\tfontVariantLigatures: \"contextual\",\r\n\t\t\t\t...rest.sx,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children ?? \"-\"}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\ntype DiagramProcessProps = {\r\n\ttext?: string;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst DiagramNodeProcess: FC<\r\n\tDiagramProcessProps\r\n> = (props) => {\r\n\tconst { text, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<DiagramComponentText>\r\n\t\t\t\t{text}\r\n\t\t\t</DiagramComponentText>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\ntype DiagramLoopFirstProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const DiagramLoopFirst: FC<\r\n\tDiagramLoopFirstProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<DiagramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<DiagramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</DiagramComponentText>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\ntype DiagramLoopLastProps = {\r\n\tcondition?: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const DiagramLoopLast: FC<\r\n\tDiagramLoopLastProps\r\n> = (props) => {\r\n\tconst { condition, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<DiagramNodeProcess\r\n\t\t\tborderBottom\r\n\t\t\tborderLeft\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderBottom\r\n\t\t\t\tborderLeft\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<Box paddingLeft={2}>{bodyNode}</Box>\r\n\t\t\t<DiagramComponentText>\r\n\t\t\t\t{condition}\r\n\t\t\t</DiagramComponentText>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\ntype DiagramIfElseProps = {\r\n\tcondition?: string;\r\n\tbodyIf: Node[];\r\n\tbodyElse: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const DiagramIfElse: FC<\r\n\tDiagramIfElseProps\r\n> = (props) => {\r\n\tconst { condition, bodyIf, bodyElse, ...rest } =\r\n\t\tprops;\r\n\r\n\tlet bodyNodeIf: ReactNode | ReactNode[] = (\r\n\t\t<DiagramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyIf.length > 0) {\r\n\t\tbodyNodeIf = bodyIf.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\tborderTop\r\n\t\t\t\tnode={subnode}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\tlet bodyNodeElse: ReactNode | ReactNode[] = (\r\n\t\t<DiagramNodeProcess borderTop />\r\n\t);\r\n\tif (bodyElse.length > 0) {\r\n\t\tbodyNodeElse = bodyElse.map(\r\n\t\t\t(subnode, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={`index-${index}`}\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tnode={subnode}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DiagramComponentText align=\"center\">\r\n\t\t\t\t\t\t{condition}\r\n\t\t\t\t\t</DiagramComponentText>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DiagramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tTrue\r\n\t\t\t\t\t\t</DiagramComponentText>\r\n\t\t\t\t\t\t<ArrowTopLeftBottomRight htmlColor=\"black\" />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ArrowBottomLeftTopRight />\r\n\t\t\t\t\t\t<DiagramComponentText\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFalse\r\n\t\t\t\t\t\t</DiagramComponentText>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tborderColor: \"inherit\",\r\n\t\t\t\t\t\t\tborderRightStyle: \"solid\",\r\n\t\t\t\t\t\t\tborderRightWidth: 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{bodyNodeIf}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={6}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack height=\"100%\">\r\n\t\t\t\t\t\t{bodyNodeElse}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\ntype DiagramFuncProps = {\r\n\tdeclaration: string;\r\n\tbody: Node[];\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst DiagramFunc: FC<DiagramFuncProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { declaration, body, ...rest } = props;\r\n\r\n\tlet bodyNode: ReactNode | ReactNode[] = (\r\n\t\t<DiagramNodeProcess\r\n\t\t\tborderTop\r\n\t\t\tborderLeft\r\n\t\t\tborderRight\r\n\t\t/>\r\n\t);\r\n\tif (body.length > 0) {\r\n\t\tbodyNode = body.map((subnode, index) => (\r\n\t\t\t<StructogramNode\r\n\t\t\t\tkey={`subnode-${index}`}\r\n\t\t\t\tnode={subnode}\r\n\t\t\t\tborderTop\r\n\t\t\t\tborderLeft\r\n\t\t\t\tborderRight\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<DiagramComponentText align=\"center\">\r\n\t\t\t\t{declaration}\r\n\t\t\t</DiagramComponentText>\r\n\t\t\t<Box paddingX={2}>{bodyNode}</Box>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\ntype DiagramErrorProps = {\r\n\tcontext: string;\r\n\treason: string;\r\n\tline: number;\r\n\tcharacter: number;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nconst DiagramError: FC<DiagramErrorProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\tcontext,\r\n\t\treason,\r\n\t\tline,\r\n\t\tcharacter,\r\n\t\t...rest\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<DiagramWrapper {...rest}>\r\n\t\t\t<DiagramComponentText>\r\n\t\t\t\t{`At line ${line}, character ${character}: ${reason}`}\r\n\t\t\t</DiagramComponentText>\r\n\t\t\t<DiagramComponentText\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\t\tpaddingY: 0,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{context}\r\n\t\t\t</DiagramComponentText>\r\n\t\t\t<DiagramComponentText\r\n\t\t\t\tpaddingLeft={1}\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\t\tpaddingY: 0,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{\"~\".repeat(context.length - 1) + \"^\"}\r\n\t\t\t</DiagramComponentText>\r\n\t\t</DiagramWrapper>\r\n\t);\r\n};\r\n\r\nconst fitlerEmptyProcessNodes = (\r\n\tnode: Node,\r\n): boolean => {\r\n\treturn (\r\n\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\tnode.body\r\n\t\t\t.map((token) => token.text)\r\n\t\t\t.join(\"\")\r\n\t\t\t.trim().length > 0\r\n\t);\r\n};\r\n\r\ntype StructogramNodeProps = {\r\n\tnode: Node;\r\n\tborderTop?: boolean;\r\n\tborderBottom?: boolean;\r\n\tborderRight?: boolean;\r\n\tborderLeft?: boolean;\r\n};\r\nexport const StructogramNode: FC<\r\n\tStructogramNodeProps\r\n> = (props) => {\r\n\tconst { node, ...rest } = props;\r\n\r\n\tswitch (node.kind) {\r\n\t\tcase NodeKind.ERROR: {\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramError\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcontext={node.context}\r\n\t\t\t\t\treason={node.reason}\r\n\t\t\t\t\tline={node.rowPos}\r\n\t\t\t\t\tcharacter={node.colPos}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcase NodeKind.FUNC: {\r\n\t\t\tlet text: string = \"\";\r\n\t\t\tif (node.decl.length > 0) {\r\n\t\t\t\ttext = node.decl\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramFunc\r\n\t\t\t\t\tdeclaration={text}\r\n\t\t\t\t\tbody={node.body}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcase NodeKind.LOOP_FIRST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramLoopFirst\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.LOOP_LAST: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramLoopLast\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbody={node.body.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.IF_ELSE: {\r\n\t\t\tlet text: string | undefined;\r\n\t\t\tif (node.condition.length > 0) {\r\n\t\t\t\ttext = node.condition\r\n\t\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t\t.join(\"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramIfElse\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tcondition={text}\r\n\t\t\t\t\tbodyIf={node.bodyIf.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tbodyElse={node.bodyElse.filter(\r\n\t\t\t\t\t\tfitlerEmptyProcessNodes,\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\tcase NodeKind.PROCESS: {\r\n\t\t\tlet text: string | undefined = node.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim();\r\n\r\n\t\t\tif (text.length === 0) {\r\n\t\t\t\ttext = undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<DiagramNodeProcess\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\ttext={text}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <Fragment />;\r\n};\r\n","import { ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tSxProps,\r\n\tTypography,\r\n} from \"@mui/material\";\r\n\r\nimport { Node, NodeKind } from \"interpreter\";\r\nimport { StructogramNode } from \"renderer/StructogramNode\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nexport const renderer = (\r\n\tnodes: Node[],\r\n\tid: string,\r\n\tboxProps: SxProps,\r\n): ReactNode => {\r\n\tlet component: ReactNode | ReactNode[] = (\r\n\t\t<Typography\r\n\t\t\tfontFamily=\"inherit\"\r\n\t\t\tfontStyle=\"italic\"\r\n\t\t>\r\n\t\t\tNothing to display.\r\n\t\t</Typography>\r\n\t);\r\n\r\n\tconst filteredNodes = nodes.filter(\r\n\t\t(node) =>\r\n\t\t\tnode.kind !== NodeKind.PROCESS ||\r\n\t\t\tnode.body\r\n\t\t\t\t.map((token) => token.text)\r\n\t\t\t\t.join(\"\")\r\n\t\t\t\t.trim().length > 0,\r\n\t);\r\n\r\n\tif (filteredNodes.length > 0) {\r\n\t\tcomponent = filteredNodes.map(\r\n\t\t\t(node, index) => (\r\n\t\t\t\t<StructogramNode\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tnode={node}\r\n\t\t\t\t\tborderLeft\r\n\t\t\t\t\tborderTop\r\n\t\t\t\t\tborderRight\r\n\t\t\t\t\tborderBottom={\r\n\t\t\t\t\t\tindex === filteredNodes.length - 1\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tborderColor={grey[700]}\r\n\t\t\tsx={{\r\n\t\t\t\t...boxProps,\r\n\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Box\r\n\t\t\t\tid={id}\r\n\t\t\t\tmaxWidth=\"640px\"\r\n\t\t\t\tborderColor={grey[700]}\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: grey[300],\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{component}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport { Box, SxProps } from \"@mui/material\";\r\n\r\nimport ReactCodeMirror from \"@uiw/react-codemirror\";\r\n\r\nimport \"./styles.css\";\r\n\r\ntype StructogramCodeEditorProps = {\r\n\tvalue: string;\r\n\tonValueChange?: (value: string) => void;\r\n\tboxProps?: SxProps;\r\n};\r\nexport const StructogramCodeEditor: FC<\r\n\tStructogramCodeEditorProps\r\n> = (props) => {\r\n\tconst { value, onValueChange, boxProps } =\r\n\t\tprops;\r\n\r\n\treturn (\r\n\t\t<Box sx={boxProps}>\r\n\t\t\t<ReactCodeMirror\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onValueChange}\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonProps,\r\n\tTooltip,\r\n} from \"@mui/material\";\r\n\r\ntype AdaptiveButtonProps = ButtonProps & {\r\n\tcollapse: boolean;\r\n};\r\nexport const AdaptiveButton: FC<\r\n\tAdaptiveButtonProps\r\n> = (props) => {\r\n\tconst { collapse, ...rest } = props;\r\n\r\n\tif (collapse) {\r\n\t\treturn (\r\n\t\t\t<Tooltip title={rest.children}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tstartIcon={undefined}\r\n\t\t\t\t\tendIcon={undefined}\r\n\t\t\t\t>\r\n\t\t\t\t\t{rest.startIcon}\r\n\t\t\t\t\t{rest.endIcon}\r\n\t\t\t\t</Button>\r\n\t\t\t</Tooltip>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...rest}\r\n\t\t\tstartIcon={rest.startIcon}\r\n\t\t\tendIcon={rest.endIcon}\r\n\t\t>\r\n\t\t\t{rest.children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n","import {\r\n\tFC,\r\n\tFragment,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tStack,\r\n\tPaper,\r\n\tButton,\r\n\tMenuList,\r\n\tListItemText,\r\n\tButtonGroup,\r\n\tPopover,\r\n\tMenuItem,\r\n\tListItemIcon,\r\n\tuseMediaQuery,\r\n\tTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n\tDownloadRounded,\r\n\tLaunchRounded,\r\n\tSendRounded,\r\n} from \"@mui/icons-material\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport {\r\n\tlexerGetAllTokens,\r\n\tlexerInit,\r\n\tNode,\r\n\tparserGetAllNodes,\r\n\tparserInit,\r\n} from \"interpreter\";\r\nimport { renderer } from \"renderer/renderer\";\r\n\r\nimport { StructogramCodeEditor } from \"App/components/StructogramCodeEditor\";\r\nimport { AdaptiveButton } from \"App/components/AdaptiveButton\";\r\nimport { useExportDiagram } from \"App/components/LiveEditor/useExportDiagram\";\r\nimport { useEditorContent } from \"App/components/LiveEditor/useEditorContent\";\r\nimport { generateUniqueLink } from \"App/components/LiveEditor/helperGenerateUniqueLink\";\r\n\r\nexport const LiveEditor: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\tconst appBarRef = useRef<HTMLDivElement | null>(\r\n\t\tnull,\r\n\t);\r\n\tconst [\r\n\t\tappBarStaticHeight,\r\n\t\tsetAppBarStaticHeight,\r\n\t] = useState<number>(0);\r\n\tconst matchBreakpointXs = useMediaQuery<Theme>(\r\n\t\t(theme) => theme.breakpoints.down(\"md\"),\r\n\t);\r\n\r\n\tconst { exportJPEG, exportPNG, exportSVG } =\r\n\t\tuseExportDiagram(\r\n\t\t\t\"structogram-preview-region\",\r\n\t\t);\r\n\r\n\tconst { editorContent, setEditorContent } =\r\n\t\tuseEditorContent(\r\n\t\t\twindow.location.href,\r\n\t\t\t\"autosaveContent\",\r\n\t\t);\r\n\r\n\tconst [nodes, setNodes] = useState<Node[]>([]);\r\n\tconst [\r\n\t\tpopoverExportMenuAnchor,\r\n\t\tsetPopoverExportMenuAnchor,\r\n\t] = useState<HTMLButtonElement | null>(null);\r\n\tconst [previewOpen, setPreviewOpen] = useState(\r\n\t\t() => {\r\n\t\t\tconst url = new URL(window.location.href);\r\n\t\t\tconst preview =\r\n\t\t\t\turl.searchParams.get(\"preview\");\r\n\t\t\tif (preview === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn preview === \"true\";\r\n\t\t},\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (appBarRef.current === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetAppBarStaticHeight(\r\n\t\t\tappBarRef.current.getBoundingClientRect()\r\n\t\t\t\t.height,\r\n\t\t);\r\n\t}, [appBarRef]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tokens = lexerGetAllTokens(\r\n\t\t\tlexerInit(editorContent),\r\n\t\t);\r\n\t\tconst nodes = parserGetAllNodes(\r\n\t\t\tparserInit(tokens),\r\n\t\t);\r\n\t\tsetNodes(nodes);\r\n\t}, [editorContent]);\r\n\r\n\tconst handlePreviewToggle = useCallback(() => {\r\n\t\tsetPreviewOpen((prev) => !prev);\r\n\t}, []);\r\n\r\n\tconst handleCopyLink = useCallback(() => {\r\n\t\tnavigator.clipboard.writeText(\r\n\t\t\tgenerateUniqueLink(editorContent),\r\n\t\t);\r\n\t\tenqueueSnackbar(\"Link copied to clipboard\", {\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t}, [enqueueSnackbar, editorContent]);\r\n\r\n\tconst handlePopoverExportMenuOpen = useCallback(\r\n\t\t(\r\n\t\t\tevent: React.MouseEvent<HTMLButtonElement>,\r\n\t\t) => {\r\n\t\t\tsetPopoverExportMenuAnchor(\r\n\t\t\t\tevent.currentTarget,\r\n\t\t\t);\r\n\t\t},\r\n\t\t[],\r\n\t);\r\n\tconst handlePopoverExportMenuClose =\r\n\t\tuseCallback(() => {\r\n\t\t\tsetPopoverExportMenuAnchor(null);\r\n\t\t}, []);\r\n\r\n\tconst handleExportDiagram = async (\r\n\t\texporterFn: () => Promise<boolean>,\r\n\t) => {\r\n\t\texporterFn().then((success) => {\r\n\t\t\tif (success) {\r\n\t\t\t\tenqueueSnackbar(\"Diagram exported\", {\r\n\t\t\t\t\tvariant: \"info\",\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tenqueueSnackbar(\r\n\t\t\t\t\"Failed to export diagram\",\r\n\t\t\t\t{\r\n\t\t\t\t\tvariant: \"error\",\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Box>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tref={appBarRef}\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handlePreviewToggle}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"Show code\"\r\n\t\t\t\t\t\t\t\t\t: \"Hide code\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\thref=\"https://eurydia.github.io/project-nassi-shneiderman-diagram-builder-online-docs/\"\r\n\t\t\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\tendIcon={<LaunchRounded />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tdocs\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\">\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tstartIcon={<DownloadRounded />}\r\n\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\thandlePopoverExportMenuOpen\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEXPORT\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t\t<AdaptiveButton\r\n\t\t\t\t\t\t\t\tcollapse={matchBreakpointXs}\r\n\t\t\t\t\t\t\t\tendIcon={<SendRounded />}\r\n\t\t\t\t\t\t\t\tonClick={handleCopyLink}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSHARE\r\n\t\t\t\t\t\t\t</AdaptiveButton>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\tlg={6}\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tpreviewOpen ? \"none\" : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StructogramCodeEditor\r\n\t\t\t\t\t\t\t\tvalue={editorContent}\r\n\t\t\t\t\t\t\t\tonValueChange={setEditorContent}\r\n\t\t\t\t\t\t\t\tboxProps={{\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\theight: `calc(100vh - ${appBarStaticHeight}px)`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\txs\r\n\t\t\t\t\t\t\tlg\r\n\t\t\t\t\t\t\tdisplay={\r\n\t\t\t\t\t\t\t\tmatchBreakpointXs && !previewOpen\r\n\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderer(\r\n\t\t\t\t\t\t\t\tnodes,\r\n\t\t\t\t\t\t\t\t\"structogram-preview-region\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpadding: 4,\r\n\t\t\t\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\t\t\t\tuserSelect: \"none\",\r\n\t\t\t\t\t\t\t\t\theight: `calc(100vh - ${appBarStaticHeight}px)`,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Popover\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={popoverExportMenuAnchor}\r\n\t\t\t\topen={popoverExportMenuAnchor !== null}\r\n\t\t\t\tonClose={handlePopoverExportMenuClose}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuList>\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thandleExportDiagram(exportJPEG)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as JPEG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thandleExportDiagram(exportPNG)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as PNG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thandleExportDiagram(exportSVG)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<DownloadRounded fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\tSave as SVG\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</MenuList>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Popover>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","// Custom hooks for exporting diagrams\r\n\r\nimport { useCallback } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {\r\n\ttoJpeg,\r\n\ttoPng,\r\n\ttoSvg,\r\n} from \"html-to-image\";\r\n\r\nexport const useExportDiagram = (\r\n\ttargetElementId: string,\r\n) => {\r\n\tconst exportSVG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\ttargetElementId,\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn toSvg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}, [targetElementId]);\r\n\r\n\tconst exportPNG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\ttargetElementId,\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn toPng(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}, [targetElementId]);\r\n\r\n\tconst exportJPEG = useCallback(async () => {\r\n\t\tconst HTMLNode = document.getElementById(\r\n\t\t\ttargetElementId,\r\n\t\t);\r\n\t\tif (HTMLNode === null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn toJpeg(HTMLNode).then((blob) => {\r\n\t\t\tif (blob === null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tsaveAs(blob, \"structogram\");\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}, [targetElementId]);\r\n\r\n\treturn {\r\n\t\texportSVG,\r\n\t\texportJPEG,\r\n\t\texportPNG,\r\n\t};\r\n};\r\n","// Custom hook for editor content\r\n\r\nimport { useCallback, useState } from \"react\";\r\n\r\nexport const useEditorContent = (\r\n\threfURL: string,\r\n\tlocalStorageKey: string,\r\n) => {\r\n\tconst [editorContent, setEditorContentInner] =\r\n\t\tuseState(() => {\r\n\t\t\tconst url = new URL(hrefURL);\r\n\r\n\t\t\tconst content =\r\n\t\t\t\turl.searchParams.get(\"content\");\r\n\t\t\tif (content !== null) {\r\n\t\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t\tlocalStorageKey,\r\n\t\t\t\t\tcontent,\r\n\t\t\t\t);\r\n\t\t\t\treturn content;\r\n\t\t\t}\r\n\r\n\t\t\tconst savedContent =\r\n\t\t\t\twindow.localStorage.getItem(\r\n\t\t\t\t\tlocalStorageKey,\r\n\t\t\t\t);\r\n\t\t\tif (savedContent !== null) {\r\n\t\t\t\treturn savedContent;\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t});\r\n\r\n\tconst setEditorContent = useCallback(\r\n\t\t(v: string) => {\r\n\t\t\tsetEditorContentInner(v);\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\tlocalStorageKey,\r\n\t\t\t\tv,\r\n\t\t\t);\r\n\t\t},\r\n\t\t[localStorageKey],\r\n\t);\r\n\r\n\treturn { editorContent, setEditorContent };\r\n};\r\n","// Custom hook for building dynamic link for a diagram\r\n\r\nexport const generateUniqueLink = (\r\n\teditorContent: string,\r\n) => {\r\n\tconst url = new URL(window.location.href);\r\n\turl.searchParams.set(\"preview\", \"true\");\r\n\turl.searchParams.set(\"content\", editorContent);\r\n\treturn url.href;\r\n};\r\n","import { Fragment, FC } from \"react\";\r\nimport {\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nimport { LiveEditor } from \"App/components/LiveEditor/LiveEditor\";\r\n\r\nconst themeDark = createTheme({\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t},\r\n});\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<ThemeProvider theme={themeDark}>\r\n\t\t\t\t<SnackbarProvider\r\n\t\t\t\t\tpreventDuplicate\r\n\t\t\t\t\tautoHideDuration={2000}\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: \"top\",\r\n\t\t\t\t\t\thorizontal: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LiveEditor />\r\n\t\t\t\t</SnackbarProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.createRoot(\r\n\tdocument.getElementById(\"root\")!,\r\n).render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n);\r\n"],"names":["TokenKind","TokenKind2","KEYWORDS","LITERAL_TOKENS","lexerGetNextTokenThenAdvance","l","token","kind","text","rowPos","cursorRow","colPos","cursorCol","cursorPos","contentLength","content","test","includes","NodeKind","NodeKind2","parserInit","tokens","tokenLength","length","parserCollectTokensBetween","p","startToken","stopToken","depth","push","parserSkipWhiteSpace","WHITE_SPACE","parserGetNextNodeThenAdvance","KEYWORD","node","body","condition","markerToken","reason","context","LEFT_PAREN","unexpectedToken","RIGHT_PAREN","pop","LEFT_CURLY","bodyTokens","RIGHT_CURLY","parserGetAllNodes","parserBuildLoopFirstNode","SEMICOLON","parserBuildLoopLastNode","bodyIf","bodyElse","bodyIfTokens","bodyElseTokens","parserBuildIfElseNode","decl","nodes","ArrowTopLeftBottomRight","props","sx","jsxRuntimeExports","jsx","SvgIcon","position","width","height","children","xmlns","preserveAspectRatio","fill","viewBox","strokeWidth","x1","y1","x2","y2","stroke","strokeLinecap","ArrowBottomLeftTopRight","DiagramWrapper","borderTop","borderBottom","borderLeft","borderRight","Box","borderStyle","borderLeftWidth","borderTopWidth","borderBottomWidth","borderRightWidth","DiagramComponentText","rest","Typography","padding","fontFamily","wordBreak","fontVariantLigatures","DiagramNodeProcess","DiagramLoopFirst","bodyNode","map","subnode","index","StructogramNode","jsxs","paddingLeft","DiagramLoopLast","DiagramIfElse","bodyNodeIf","bodyNodeElse","Grid","container","item","xs","align","display","alignItems","justifyContent","zIndex","backgroundColor","grey","htmlColor","Stack","borderColor","borderRightStyle","DiagramFunc","declaration","paddingX","DiagramError","line","character","paddingY","repeat","fitlerEmptyProcessNodes","PROCESS","join","trim","ERROR","FUNC","LOOP_FIRST","filter","LOOP_LAST","IF_ELSE","Fragment","renderer","id","boxProps","component","fontStyle","filteredNodes","maxWidth","StructogramCodeEditor","value","onValueChange","ReactCodeMirror","onChange","theme","AdaptiveButton","collapse","Tooltip","title","Button","startIcon","endIcon","LiveEditor","enqueueSnackbar","useSnackbar","appBarRef","useRef","appBarStaticHeight","setAppBarStaticHeight","useState","matchBreakpointXs","useMediaQuery","breakpoints","down","exportJPEG","exportPNG","exportSVG","targetElementId","useCallback","async","HTMLNode","document","getElementById","toSvg","then","blob","toPng","toJpeg","useExportDiagram","editorContent","setEditorContent","hrefURL","localStorageKey","setEditorContentInner","URL","searchParams","get","window","localStorage","setItem","savedContent","getItem","v","useEditorContent","location","href","setNodes","popoverExportMenuAnchor","setPopoverExportMenuAnchor","previewOpen","setPreviewOpen","preview","useEffect","current","getBoundingClientRect","lexerGetAllTokens","cleanedContent","cleanContent","contentPos","removeComments","normalize","lexerInit","handlePreviewToggle","prev","handleCopyLink","navigator","clipboard","writeText","url","set","generateUniqueLink","variant","handlePopoverExportMenuOpen","event","currentTarget","handlePopoverExportMenuClose","handleExportDiagram","exporterFn","success","Paper","ref","square","elevation","direction","ButtonGroup","onClick","target","LaunchRounded","DownloadRounded","SendRounded","lg","overflowY","userSelect","Popover","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","open","onClose","MenuList","MenuItem","ListItemIcon","fontSize","ListItemText","themeDark","createTheme","palette","mode","App","CssBaseline","ThemeProvider","SnackbarProvider","preventDuplicate","autoHideDuration","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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"}